# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, goverfl0w
# This file is distributed under the same license as the interactions.py
# package.
# ItsRqtl <itsrqtl@gmail>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: interactions.py 4.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-07-17 16:00-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: ItsRqtl <itsrqtl@gmail.com>\n"
"Language-Team: None\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: ItsRqtl\n"

#: ../../api.http.rst:4
msgid "HTTP"
msgstr "HTTP"

#: interactions.api.http.route.Route:1 of
msgid "A class representing how an HTTP route is structured."
msgstr "表示如何構建HTTP路由的類別。"

#: interactions.api.http.client.HTTPClient
#: interactions.api.http.limiter.Limiter interactions.api.http.request._Request
#: interactions.api.http.route.Route of
msgid "Variables"
msgstr "變數"

#: interactions.api.http.route.Route:3 of
msgid "The HTTP route path."
msgstr "HTTP路由路徑。"

#: interactions.api.http.route.Route:4 of
msgid "The HTTP method."
msgstr "HTTP函數。"

#: interactions.api.http.route.Route:5 of
msgid "The URL path."
msgstr "URL路徑。"

#: interactions.api.http.route.Route:6 of
msgid "The channel ID from the bucket if given."
msgstr "從bucket獲取的頻道ID，如有。"

#: interactions.api.http.route.Route:7 of
msgid "The guild ID from the bucket if given."
msgstr "從bucket獲取的伺服器ID，如有。"

#: interactions.api.http.channel.ChannelRequest.create_channel
#: interactions.api.http.channel.ChannelRequest.create_channel_invite
#: interactions.api.http.channel.ChannelRequest.create_stage_instance
#: interactions.api.http.channel.ChannelRequest.delete_channel
#: interactions.api.http.channel.ChannelRequest.delete_channel_permission
#: interactions.api.http.channel.ChannelRequest.delete_stage_instance
#: interactions.api.http.channel.ChannelRequest.edit_channel_permission
#: interactions.api.http.channel.ChannelRequest.get_channel
#: interactions.api.http.channel.ChannelRequest.get_channel_invites
#: interactions.api.http.channel.ChannelRequest.get_channel_messages
#: interactions.api.http.channel.ChannelRequest.get_pinned_messages
#: interactions.api.http.channel.ChannelRequest.get_stage_instance
#: interactions.api.http.channel.ChannelRequest.modify_channel
#: interactions.api.http.channel.ChannelRequest.modify_stage_instance
#: interactions.api.http.channel.ChannelRequest.move_channel
#: interactions.api.http.channel.ChannelRequest.trigger_typing
#: interactions.api.http.client.HTTPClient
#: interactions.api.http.emoji.EmojiRequest.create_guild_emoji
#: interactions.api.http.emoji.EmojiRequest.delete_guild_emoji
#: interactions.api.http.emoji.EmojiRequest.get_all_emoji
#: interactions.api.http.emoji.EmojiRequest.get_guild_emoji
#: interactions.api.http.emoji.EmojiRequest.modify_guild_emoji
#: interactions.api.http.guild.GuildRequest.add_guild_member
#: interactions.api.http.guild.GuildRequest.create_auto_moderation_rule
#: interactions.api.http.guild.GuildRequest.create_guild_ban
#: interactions.api.http.guild.GuildRequest.create_guild_from_guild_template
#: interactions.api.http.guild.GuildRequest.create_guild_kick
#: interactions.api.http.guild.GuildRequest.create_guild_role
#: interactions.api.http.guild.GuildRequest.create_guild_template
#: interactions.api.http.guild.GuildRequest.delete_auto_moderation_rule
#: interactions.api.http.guild.GuildRequest.delete_guild
#: interactions.api.http.guild.GuildRequest.delete_guild_integration
#: interactions.api.http.guild.GuildRequest.delete_guild_role
#: interactions.api.http.guild.GuildRequest.delete_guild_template
#: interactions.api.http.guild.GuildRequest.get_all_channels
#: interactions.api.http.guild.GuildRequest.get_all_roles
#: interactions.api.http.guild.GuildRequest.get_auto_moderation_rule
#: interactions.api.http.guild.GuildRequest.get_guild
#: interactions.api.http.guild.GuildRequest.get_guild_auditlog
#: interactions.api.http.guild.GuildRequest.get_guild_bans
#: interactions.api.http.guild.GuildRequest.get_guild_integrations
#: interactions.api.http.guild.GuildRequest.get_guild_invites
#: interactions.api.http.guild.GuildRequest.get_guild_preview
#: interactions.api.http.guild.GuildRequest.get_guild_prune_count
#: interactions.api.http.guild.GuildRequest.get_guild_templates
#: interactions.api.http.guild.GuildRequest.get_guild_welcome_screen
#: interactions.api.http.guild.GuildRequest.get_guild_widget
#: interactions.api.http.guild.GuildRequest.get_guild_widget_image
#: interactions.api.http.guild.GuildRequest.get_guild_widget_settings
#: interactions.api.http.guild.GuildRequest.get_user_ban
#: interactions.api.http.guild.GuildRequest.leave_guild
#: interactions.api.http.guild.GuildRequest.list_auto_moderation_rules
#: interactions.api.http.guild.GuildRequest.modify_auto_moderation_rule
#: interactions.api.http.guild.GuildRequest.modify_current_user_voice_state
#: interactions.api.http.guild.GuildRequest.modify_guild
#: interactions.api.http.guild.GuildRequest.modify_guild_role
#: interactions.api.http.guild.GuildRequest.modify_guild_role_positions
#: interactions.api.http.guild.GuildRequest.modify_guild_template
#: interactions.api.http.guild.GuildRequest.modify_guild_welcome_screen
#: interactions.api.http.guild.GuildRequest.modify_guild_widget
#: interactions.api.http.guild.GuildRequest.modify_user_voice_state
#: interactions.api.http.guild.GuildRequest.remove_guild_ban
#: interactions.api.http.guild.GuildRequest.remove_guild_member
#: interactions.api.http.guild.GuildRequest.sync_guild_template
#: interactions.api.http.interaction.InteractionRequest._post_followup
#: interactions.api.http.interaction.InteractionRequest.create_application_command
#: interactions.api.http.interaction.InteractionRequest.create_interaction_response
#: interactions.api.http.interaction.InteractionRequest.delete_application_command
#: interactions.api.http.interaction.InteractionRequest.delete_interaction_response
#: interactions.api.http.interaction.InteractionRequest.edit_application_command
#: interactions.api.http.interaction.InteractionRequest.edit_application_command_permissions
#: interactions.api.http.interaction.InteractionRequest.edit_interaction_response
#: interactions.api.http.interaction.InteractionRequest.get_all_application_command_permissions
#: interactions.api.http.interaction.InteractionRequest.get_application_command_permissions
#: interactions.api.http.interaction.InteractionRequest.get_application_commands
#: interactions.api.http.interaction.InteractionRequest.get_original_interaction_response
#: interactions.api.http.interaction.InteractionRequest.overwrite_application_command
#: interactions.api.http.limiter.Limiter
#: interactions.api.http.member.MemberRequest.add_member_role
#: interactions.api.http.member.MemberRequest.get_list_of_members
#: interactions.api.http.member.MemberRequest.get_member
#: interactions.api.http.member.MemberRequest.modify_member
#: interactions.api.http.member.MemberRequest.remove_member_role
#: interactions.api.http.member.MemberRequest.search_guild_members
#: interactions.api.http.message.MessageRequest.create_message
#: interactions.api.http.message.MessageRequest.delete_message
#: interactions.api.http.message.MessageRequest.delete_messages
#: interactions.api.http.message.MessageRequest.edit_message
#: interactions.api.http.message.MessageRequest.get_message
#: interactions.api.http.message.MessageRequest.pin_message
#: interactions.api.http.message.MessageRequest.publish_message
#: interactions.api.http.message.MessageRequest.send_message
#: interactions.api.http.message.MessageRequest.unpin_message
#: interactions.api.http.reaction.ReactionRequest.create_reaction
#: interactions.api.http.reaction.ReactionRequest.get_reactions_of_emoji
#: interactions.api.http.reaction.ReactionRequest.remove_all_reactions
#: interactions.api.http.reaction.ReactionRequest.remove_all_reactions_of_emoji
#: interactions.api.http.reaction.ReactionRequest.remove_self_reaction
#: interactions.api.http.reaction.ReactionRequest.remove_user_reaction
#: interactions.api.http.request._Request
#: interactions.api.http.request._Request.request
#: interactions.api.http.route.Route
#: interactions.api.http.route.Route.get_bucket
#: interactions.api.http.scheduledEvent.ScheduledEventRequest.create_scheduled_event
#: interactions.api.http.scheduledEvent.ScheduledEventRequest.delete_scheduled_event
#: interactions.api.http.scheduledEvent.ScheduledEventRequest.get_scheduled_event
#: interactions.api.http.scheduledEvent.ScheduledEventRequest.get_scheduled_event_users
#: interactions.api.http.scheduledEvent.ScheduledEventRequest.get_scheduled_events
#: interactions.api.http.scheduledEvent.ScheduledEventRequest.modify_scheduled_event
#: interactions.api.http.sticker.StickerRequest.create_guild_sticker
#: interactions.api.http.sticker.StickerRequest.delete_guild_sticker
#: interactions.api.http.sticker.StickerRequest.get_guild_sticker
#: interactions.api.http.sticker.StickerRequest.get_sticker
#: interactions.api.http.sticker.StickerRequest.list_guild_stickers
#: interactions.api.http.sticker.StickerRequest.modify_guild_sticker
#: interactions.api.http.thread.ThreadRequest.add_member_to_thread
#: interactions.api.http.thread.ThreadRequest.create_thread
#: interactions.api.http.thread.ThreadRequest.get_member_from_thread
#: interactions.api.http.thread.ThreadRequest.join_thread
#: interactions.api.http.thread.ThreadRequest.leave_thread
#: interactions.api.http.thread.ThreadRequest.list_active_threads
#: interactions.api.http.thread.ThreadRequest.list_joined_private_archived_threads
#: interactions.api.http.thread.ThreadRequest.list_private_archived_threads
#: interactions.api.http.thread.ThreadRequest.list_public_archived_threads
#: interactions.api.http.thread.ThreadRequest.list_thread_members
#: interactions.api.http.thread.ThreadRequest.remove_member_from_thread
#: interactions.api.http.user.UserRequest.create_dm
#: interactions.api.http.user.UserRequest.get_user
#: interactions.api.http.user.UserRequest.modify_self
#: interactions.api.http.user.UserRequest.modify_self_nick_in_guild
#: interactions.api.http.webhook.WebhookRequest.create_webhook
#: interactions.api.http.webhook.WebhookRequest.delete_original_webhook_message
#: interactions.api.http.webhook.WebhookRequest.delete_webhook
#: interactions.api.http.webhook.WebhookRequest.delete_webhook_message
#: interactions.api.http.webhook.WebhookRequest.edit_webhook_message
#: interactions.api.http.webhook.WebhookRequest.execute_github_webhook
#: interactions.api.http.webhook.WebhookRequest.execute_slack_webhook
#: interactions.api.http.webhook.WebhookRequest.execute_webhook
#: interactions.api.http.webhook.WebhookRequest.get_channel_webhooks
#: interactions.api.http.webhook.WebhookRequest.get_guild_webhooks
#: interactions.api.http.webhook.WebhookRequest.get_webhook
#: interactions.api.http.webhook.WebhookRequest.get_webhook_message
#: interactions.api.http.webhook.WebhookRequest.modify_webhook of
msgid "Parameters"
msgstr "參數"

#: interactions.api.http.channel.ChannelRequest
#: interactions.api.http.channel.ChannelRequest.create_channel
#: interactions.api.http.channel.ChannelRequest.create_channel_invite
#: interactions.api.http.channel.ChannelRequest.create_stage_instance
#: interactions.api.http.channel.ChannelRequest.delete_channel
#: interactions.api.http.channel.ChannelRequest.delete_channel_permission
#: interactions.api.http.channel.ChannelRequest.delete_stage_instance
#: interactions.api.http.channel.ChannelRequest.edit_channel_permission
#: interactions.api.http.channel.ChannelRequest.get_channel
#: interactions.api.http.channel.ChannelRequest.get_channel_invites
#: interactions.api.http.channel.ChannelRequest.get_channel_messages
#: interactions.api.http.channel.ChannelRequest.get_pinned_messages
#: interactions.api.http.channel.ChannelRequest.get_stage_instance
#: interactions.api.http.channel.ChannelRequest.modify_channel
#: interactions.api.http.channel.ChannelRequest.modify_stage_instance
#: interactions.api.http.channel.ChannelRequest.move_channel
#: interactions.api.http.channel.ChannelRequest.trigger_typing
#: interactions.api.http.client.HTTPClient.get_bot_gateway
#: interactions.api.http.client.HTTPClient.get_current_authorisation_information
#: interactions.api.http.client.HTTPClient.get_current_bot_information
#: interactions.api.http.client.HTTPClient.get_gateway
#: interactions.api.http.client.HTTPClient.login
#: interactions.api.http.client.HTTPClient.logout
#: interactions.api.http.emoji.EmojiRequest
#: interactions.api.http.emoji.EmojiRequest.create_guild_emoji
#: interactions.api.http.emoji.EmojiRequest.delete_guild_emoji
#: interactions.api.http.emoji.EmojiRequest.get_all_emoji
#: interactions.api.http.emoji.EmojiRequest.get_guild_emoji
#: interactions.api.http.emoji.EmojiRequest.modify_guild_emoji
#: interactions.api.http.guild.GuildRequest
#: interactions.api.http.guild.GuildRequest.add_guild_member
#: interactions.api.http.guild.GuildRequest.create_auto_moderation_rule
#: interactions.api.http.guild.GuildRequest.create_guild_ban
#: interactions.api.http.guild.GuildRequest.create_guild_from_guild_template
#: interactions.api.http.guild.GuildRequest.create_guild_kick
#: interactions.api.http.guild.GuildRequest.create_guild_role
#: interactions.api.http.guild.GuildRequest.create_guild_template
#: interactions.api.http.guild.GuildRequest.delete_auto_moderation_rule
#: interactions.api.http.guild.GuildRequest.delete_guild
#: interactions.api.http.guild.GuildRequest.delete_guild_integration
#: interactions.api.http.guild.GuildRequest.delete_guild_role
#: interactions.api.http.guild.GuildRequest.delete_guild_template
#: interactions.api.http.guild.GuildRequest.get_all_channels
#: interactions.api.http.guild.GuildRequest.get_all_roles
#: interactions.api.http.guild.GuildRequest.get_auto_moderation_rule
#: interactions.api.http.guild.GuildRequest.get_guild
#: interactions.api.http.guild.GuildRequest.get_guild_auditlog
#: interactions.api.http.guild.GuildRequest.get_guild_bans
#: interactions.api.http.guild.GuildRequest.get_guild_integrations
#: interactions.api.http.guild.GuildRequest.get_guild_invites
#: interactions.api.http.guild.GuildRequest.get_guild_preview
#: interactions.api.http.guild.GuildRequest.get_guild_prune_count
#: interactions.api.http.guild.GuildRequest.get_guild_templates
#: interactions.api.http.guild.GuildRequest.get_guild_welcome_screen
#: interactions.api.http.guild.GuildRequest.get_guild_widget
#: interactions.api.http.guild.GuildRequest.get_guild_widget_image
#: interactions.api.http.guild.GuildRequest.get_guild_widget_settings
#: interactions.api.http.guild.GuildRequest.get_self_guilds
#: interactions.api.http.guild.GuildRequest.get_user_ban
#: interactions.api.http.guild.GuildRequest.leave_guild
#: interactions.api.http.guild.GuildRequest.list_auto_moderation_rules
#: interactions.api.http.guild.GuildRequest.modify_auto_moderation_rule
#: interactions.api.http.guild.GuildRequest.modify_current_user_voice_state
#: interactions.api.http.guild.GuildRequest.modify_guild
#: interactions.api.http.guild.GuildRequest.modify_guild_role
#: interactions.api.http.guild.GuildRequest.modify_guild_role_positions
#: interactions.api.http.guild.GuildRequest.modify_guild_template
#: interactions.api.http.guild.GuildRequest.modify_guild_welcome_screen
#: interactions.api.http.guild.GuildRequest.modify_guild_widget
#: interactions.api.http.guild.GuildRequest.modify_user_voice_state
#: interactions.api.http.guild.GuildRequest.remove_guild_ban
#: interactions.api.http.guild.GuildRequest.remove_guild_member
#: interactions.api.http.guild.GuildRequest.sync_guild_template
#: interactions.api.http.interaction.InteractionRequest
#: interactions.api.http.interaction.InteractionRequest._post_followup
#: interactions.api.http.interaction.InteractionRequest.create_application_command
#: interactions.api.http.interaction.InteractionRequest.create_interaction_response
#: interactions.api.http.interaction.InteractionRequest.delete_application_command
#: interactions.api.http.interaction.InteractionRequest.delete_interaction_response
#: interactions.api.http.interaction.InteractionRequest.edit_application_command
#: interactions.api.http.interaction.InteractionRequest.edit_application_command_permissions
#: interactions.api.http.interaction.InteractionRequest.edit_interaction_response
#: interactions.api.http.interaction.InteractionRequest.get_all_application_command_permissions
#: interactions.api.http.interaction.InteractionRequest.get_application_command_permissions
#: interactions.api.http.interaction.InteractionRequest.get_application_commands
#: interactions.api.http.interaction.InteractionRequest.get_original_interaction_response
#: interactions.api.http.interaction.InteractionRequest.overwrite_application_command
#: interactions.api.http.limiter.Limiter
#: interactions.api.http.member.MemberRequest
#: interactions.api.http.member.MemberRequest.add_member_role
#: interactions.api.http.member.MemberRequest.get_list_of_members
#: interactions.api.http.member.MemberRequest.get_member
#: interactions.api.http.member.MemberRequest.modify_member
#: interactions.api.http.member.MemberRequest.remove_member_role
#: interactions.api.http.member.MemberRequest.search_guild_members
#: interactions.api.http.message.MessageRequest
#: interactions.api.http.message.MessageRequest.create_message
#: interactions.api.http.message.MessageRequest.delete_message
#: interactions.api.http.message.MessageRequest.delete_messages
#: interactions.api.http.message.MessageRequest.edit_message
#: interactions.api.http.message.MessageRequest.get_message
#: interactions.api.http.message.MessageRequest.pin_message
#: interactions.api.http.message.MessageRequest.publish_message
#: interactions.api.http.message.MessageRequest.send_message
#: interactions.api.http.message.MessageRequest.unpin_message
#: interactions.api.http.reaction.ReactionRequest
#: interactions.api.http.reaction.ReactionRequest.create_reaction
#: interactions.api.http.reaction.ReactionRequest.get_reactions_of_emoji
#: interactions.api.http.reaction.ReactionRequest.remove_all_reactions
#: interactions.api.http.reaction.ReactionRequest.remove_all_reactions_of_emoji
#: interactions.api.http.reaction.ReactionRequest.remove_self_reaction
#: interactions.api.http.reaction.ReactionRequest.remove_user_reaction
#: interactions.api.http.request._Request
#: interactions.api.http.request._Request._check_lock
#: interactions.api.http.request._Request._check_session
#: interactions.api.http.request._Request.close
#: interactions.api.http.request._Request.request
#: interactions.api.http.route.Route interactions.api.http.route.Route.endpoint
#: interactions.api.http.route.Route.get_bucket
#: interactions.api.http.scheduledEvent.ScheduledEventRequest
#: interactions.api.http.scheduledEvent.ScheduledEventRequest.create_scheduled_event
#: interactions.api.http.scheduledEvent.ScheduledEventRequest.delete_scheduled_event
#: interactions.api.http.scheduledEvent.ScheduledEventRequest.get_scheduled_event
#: interactions.api.http.scheduledEvent.ScheduledEventRequest.get_scheduled_event_users
#: interactions.api.http.scheduledEvent.ScheduledEventRequest.get_scheduled_events
#: interactions.api.http.scheduledEvent.ScheduledEventRequest.modify_scheduled_event
#: interactions.api.http.sticker.StickerRequest
#: interactions.api.http.sticker.StickerRequest.create_guild_sticker
#: interactions.api.http.sticker.StickerRequest.delete_guild_sticker
#: interactions.api.http.sticker.StickerRequest.get_guild_sticker
#: interactions.api.http.sticker.StickerRequest.get_sticker
#: interactions.api.http.sticker.StickerRequest.list_guild_stickers
#: interactions.api.http.sticker.StickerRequest.list_nitro_sticker_packs
#: interactions.api.http.sticker.StickerRequest.modify_guild_sticker
#: interactions.api.http.thread.ThreadRequest
#: interactions.api.http.thread.ThreadRequest.add_member_to_thread
#: interactions.api.http.thread.ThreadRequest.create_thread
#: interactions.api.http.thread.ThreadRequest.get_member_from_thread
#: interactions.api.http.thread.ThreadRequest.join_thread
#: interactions.api.http.thread.ThreadRequest.leave_thread
#: interactions.api.http.thread.ThreadRequest.list_active_threads
#: interactions.api.http.thread.ThreadRequest.list_joined_private_archived_threads
#: interactions.api.http.thread.ThreadRequest.list_private_archived_threads
#: interactions.api.http.thread.ThreadRequest.list_public_archived_threads
#: interactions.api.http.thread.ThreadRequest.list_thread_members
#: interactions.api.http.thread.ThreadRequest.remove_member_from_thread
#: interactions.api.http.user.UserRequest
#: interactions.api.http.user.UserRequest.create_dm
#: interactions.api.http.user.UserRequest.get_self
#: interactions.api.http.user.UserRequest.get_user
#: interactions.api.http.user.UserRequest.modify_self
#: interactions.api.http.user.UserRequest.modify_self_nick_in_guild
#: interactions.api.http.webhook.WebhookRequest
#: interactions.api.http.webhook.WebhookRequest.create_webhook
#: interactions.api.http.webhook.WebhookRequest.delete_original_webhook_message
#: interactions.api.http.webhook.WebhookRequest.delete_webhook_message
#: interactions.api.http.webhook.WebhookRequest.edit_webhook_message
#: interactions.api.http.webhook.WebhookRequest.execute_github_webhook
#: interactions.api.http.webhook.WebhookRequest.execute_slack_webhook
#: interactions.api.http.webhook.WebhookRequest.execute_webhook
#: interactions.api.http.webhook.WebhookRequest.get_channel_webhooks
#: interactions.api.http.webhook.WebhookRequest.get_guild_webhooks
#: interactions.api.http.webhook.WebhookRequest.get_webhook
#: interactions.api.http.webhook.WebhookRequest.get_webhook_message
#: interactions.api.http.webhook.WebhookRequest.modify_webhook of
msgid "Return type"
msgstr "回傳類型"

#: interactions.api.http.route.Route.get_bucket:1 of
msgid ""
"Returns the route's bucket. If shared_bucket is None, returns the path "
"with major parameters. Otherwise, it relies on Discord's given bucket."
msgstr "回傳路由的bucket。如果shared_bucket為None，則回傳帶有主要參數的路徑。否則，它依賴於Discord提供的bucket。"

#: interactions.api.http.route.Route.get_bucket:4 of
msgid "The bucket that Discord provides, if available."
msgstr "Discord提供的bucket，如有。"

#: interactions.api.http.channel.ChannelRequest.create_channel
#: interactions.api.http.channel.ChannelRequest.create_channel_invite
#: interactions.api.http.channel.ChannelRequest.create_stage_instance
#: interactions.api.http.channel.ChannelRequest.get_channel
#: interactions.api.http.channel.ChannelRequest.get_channel_invites
#: interactions.api.http.channel.ChannelRequest.get_channel_messages
#: interactions.api.http.channel.ChannelRequest.get_pinned_messages
#: interactions.api.http.channel.ChannelRequest.get_stage_instance
#: interactions.api.http.channel.ChannelRequest.modify_channel
#: interactions.api.http.channel.ChannelRequest.modify_stage_instance
#: interactions.api.http.channel.ChannelRequest.move_channel
#: interactions.api.http.client.HTTPClient.get_bot_gateway
#: interactions.api.http.emoji.EmojiRequest.create_guild_emoji
#: interactions.api.http.emoji.EmojiRequest.get_all_emoji
#: interactions.api.http.emoji.EmojiRequest.get_guild_emoji
#: interactions.api.http.emoji.EmojiRequest.modify_guild_emoji
#: interactions.api.http.guild.GuildRequest.add_guild_member
#: interactions.api.http.guild.GuildRequest.create_auto_moderation_rule
#: interactions.api.http.guild.GuildRequest.create_guild_from_guild_template
#: interactions.api.http.guild.GuildRequest.create_guild_role
#: interactions.api.http.guild.GuildRequest.create_guild_template
#: interactions.api.http.guild.GuildRequest.delete_guild_template
#: interactions.api.http.guild.GuildRequest.get_all_channels
#: interactions.api.http.guild.GuildRequest.get_all_roles
#: interactions.api.http.guild.GuildRequest.get_guild
#: interactions.api.http.guild.GuildRequest.get_guild_bans
#: interactions.api.http.guild.GuildRequest.get_guild_integrations
#: interactions.api.http.guild.GuildRequest.get_guild_invites
#: interactions.api.http.guild.GuildRequest.get_guild_preview
#: interactions.api.http.guild.GuildRequest.get_guild_prune_count
#: interactions.api.http.guild.GuildRequest.get_guild_templates
#: interactions.api.http.guild.GuildRequest.get_guild_welcome_screen
#: interactions.api.http.guild.GuildRequest.get_guild_widget
#: interactions.api.http.guild.GuildRequest.get_guild_widget_image
#: interactions.api.http.guild.GuildRequest.get_guild_widget_settings
#: interactions.api.http.guild.GuildRequest.get_user_ban
#: interactions.api.http.guild.GuildRequest.leave_guild
#: interactions.api.http.guild.GuildRequest.modify_auto_moderation_rule
#: interactions.api.http.guild.GuildRequest.modify_guild
#: interactions.api.http.guild.GuildRequest.modify_guild_role
#: interactions.api.http.guild.GuildRequest.modify_guild_role_positions
#: interactions.api.http.guild.GuildRequest.modify_guild_template
#: interactions.api.http.guild.GuildRequest.modify_guild_welcome_screen
#: interactions.api.http.guild.GuildRequest.modify_guild_widget
#: interactions.api.http.guild.GuildRequest.sync_guild_template
#: interactions.api.http.interaction.InteractionRequest.create_application_command
#: interactions.api.http.interaction.InteractionRequest.edit_application_command
#: interactions.api.http.interaction.InteractionRequest.edit_application_command_permissions
#: interactions.api.http.interaction.InteractionRequest.edit_interaction_response
#: interactions.api.http.interaction.InteractionRequest.get_all_application_command_permissions
#: interactions.api.http.interaction.InteractionRequest.get_application_command_permissions
#: interactions.api.http.interaction.InteractionRequest.get_application_commands
#: interactions.api.http.interaction.InteractionRequest.get_original_interaction_response
#: interactions.api.http.interaction.InteractionRequest.overwrite_application_command
#: interactions.api.http.member.MemberRequest.get_list_of_members
#: interactions.api.http.member.MemberRequest.get_member
#: interactions.api.http.member.MemberRequest.modify_member
#: interactions.api.http.message.MessageRequest.edit_message
#: interactions.api.http.message.MessageRequest.get_message
#: interactions.api.http.message.MessageRequest.publish_message
#: interactions.api.http.reaction.ReactionRequest.get_reactions_of_emoji
#: interactions.api.http.request._Request.request
#: interactions.api.http.route.Route.endpoint
#: interactions.api.http.route.Route.get_bucket
#: interactions.api.http.scheduledEvent.ScheduledEventRequest.create_scheduled_event
#: interactions.api.http.scheduledEvent.ScheduledEventRequest.delete_scheduled_event
#: interactions.api.http.scheduledEvent.ScheduledEventRequest.get_scheduled_event
#: interactions.api.http.scheduledEvent.ScheduledEventRequest.get_scheduled_event_users
#: interactions.api.http.scheduledEvent.ScheduledEventRequest.get_scheduled_events
#: interactions.api.http.scheduledEvent.ScheduledEventRequest.modify_scheduled_event
#: interactions.api.http.sticker.StickerRequest.create_guild_sticker
#: interactions.api.http.sticker.StickerRequest.delete_guild_sticker
#: interactions.api.http.sticker.StickerRequest.get_guild_sticker
#: interactions.api.http.sticker.StickerRequest.get_sticker
#: interactions.api.http.sticker.StickerRequest.list_guild_stickers
#: interactions.api.http.sticker.StickerRequest.list_nitro_sticker_packs
#: interactions.api.http.sticker.StickerRequest.modify_guild_sticker
#: interactions.api.http.thread.ThreadRequest.create_thread
#: interactions.api.http.thread.ThreadRequest.get_member_from_thread
#: interactions.api.http.thread.ThreadRequest.list_active_threads
#: interactions.api.http.thread.ThreadRequest.list_joined_private_archived_threads
#: interactions.api.http.thread.ThreadRequest.list_private_archived_threads
#: interactions.api.http.thread.ThreadRequest.list_public_archived_threads
#: interactions.api.http.thread.ThreadRequest.list_thread_members
#: interactions.api.http.user.UserRequest.create_dm
#: interactions.api.http.user.UserRequest.get_self
#: interactions.api.http.user.UserRequest.get_user
#: interactions.api.http.user.UserRequest.modify_self_nick_in_guild
#: interactions.api.http.webhook.WebhookRequest.create_webhook
#: interactions.api.http.webhook.WebhookRequest.edit_webhook_message
#: interactions.api.http.webhook.WebhookRequest.execute_github_webhook
#: interactions.api.http.webhook.WebhookRequest.execute_slack_webhook
#: interactions.api.http.webhook.WebhookRequest.execute_webhook
#: interactions.api.http.webhook.WebhookRequest.get_channel_webhooks
#: interactions.api.http.webhook.WebhookRequest.get_guild_webhooks
#: interactions.api.http.webhook.WebhookRequest.get_webhook_message
#: interactions.api.http.webhook.WebhookRequest.modify_webhook of
msgid "Returns"
msgstr "回傳"

#: interactions.api.http.route.Route.get_bucket:7 of
msgid "The route bucket."
msgstr "路由的bucket。"

#: interactions.api.http.route.Route.endpoint:1 of
msgid "Returns the route's endpoint."
msgstr "回傳路由的endpoint。"

#: interactions.api.http.route.Route.endpoint:3 of
msgid "The route endpoint."
msgstr "路由的endpoint。"

#: interactions.api.http.limiter.Limiter:1 of
msgid "A class representing a limitation for an HTTP request."
msgstr "一個代表HTTP請求限制的類別。"

#: interactions.api.http.limiter.Limiter:3 of
msgid "The \"lock\" or controller of the request."
msgstr "請求的「鎖」或控制器。"

#: interactions.api.http.limiter.Limiter:4 of
msgid "The remaining time before the request can be ran."
msgstr "可以執行請求前的剩餘時間。"

#: interactions.api.http.request._Request:1 of
msgid "A class representing how HTTP requests are sent/read."
msgstr "一個代表HTTP請求如何被送出/讀取的類別。"

#: interactions.api.http.request._Request:3 of
msgid "The current application token."
msgstr "目前的應用程式的token。"

#: interactions.api.http.request._Request:4 of
msgid "The current coroutine event loop."
msgstr "目前的協程事件循環。"

#: interactions.api.http.request._Request:5 of
msgid "The current per-route rate limiters from the API."
msgstr "目前的每個路由的API的速率限制器。"

#: interactions.api.http.request._Request:6 of
msgid "The current endpoint to shared_bucket cache from the API."
msgstr "目前的API的endpoint到shared_bucket緩存。"

#: interactions.api.http.request._Request:7 of
msgid "The current headers for an HTTP request."
msgstr "目前的HTTP請求的headers。"

#: interactions.api.http.request._Request:8 of
msgid "The current session for making requests."
msgstr "目前用來發送請求的連線階段。"

#: interactions.api.http.request._Request:9 of
msgid "The global rate limiter."
msgstr "全域速率限制器。"

#: interactions.api.http.request._Request._check_session:1 of
msgid "Ensures that we have a valid connection session."
msgstr "確保我們有一個有效的連線階段。"

#: interactions.api.http.request._Request._check_lock:1 of
msgid "Checks the global lock for its current state."
msgstr "檢查全域鎖的目前狀態。"

#: interactions.api.http.request._Request.request:1 of
msgid "Sends a request to the Discord API."
msgstr "向Discord API發送一個請求。"

#: interactions.api.http.request._Request.request:3 of
msgid "The HTTP route to request."
msgstr "要請求的HTTP路由。"

#: interactions.api.http.request._Request.request:5 of
msgid "Optional keyword-only arguments to pass as information in the request."
msgstr "可選的關鍵字參數，用來傳遞請求的資訊。"

#: interactions.api.http.request._Request.request:7 of
msgid "The contents of the request if any."
msgstr "請求的內容，如有。"

#: interactions.api.http.request._Request.close:1 of
msgid "Closes the current session."
msgstr "關閉目前的連線階段。"

#: interactions.api.http.client.HTTPClient:1 of
msgid "The user-facing client of the Web API for individual endpoints."
msgstr "單獨的endpoint的Web API面向使用者的客戶端。"

#: interactions.api.http.client.HTTPClient:3 of
msgid "The token of the application."
msgstr "應用程式的token。"

#: interactions.api.http.client.HTTPClient:4 of
msgid "The requesting interface for endpoints."
msgstr "endpoint的請求介面。"

#: interactions.api.http.client.HTTPClient:5 of
msgid "The referenced cache."
msgstr "參考的緩存。"

#: interactions.api.http.client.HTTPClient.get_gateway:1 of
msgid ""
"This calls the Gateway endpoint and returns a v9 gateway link with JSON "
"encoding."
msgstr "呼叫Gateway endpoint並回傳一個使用JSON編碼的v9 gateway連結。"

#: interactions.api.http.client.HTTPClient.get_bot_gateway:1 of
msgid "This calls the BOT Gateway endpoint."
msgstr "呼叫BOT Gateway endpoint。"

#: interactions.api.http.client.HTTPClient.get_bot_gateway:3 of
msgid "A tuple denoting (shard, gateway_url), url from API v9 and JSON encoding"
msgstr "一個tuple，表示(shard, gateway_url)，API v9的url和JSON編碼"

#: interactions.api.http.client.HTTPClient.login:1 of
msgid ""
"This 'logins' to the gateway, which makes it available to use any other "
"endpoint."
msgstr "「登入」到gateway，使其可以使用任何其他endpoint。"

#: interactions.api.http.client.HTTPClient.logout:1 of
msgid "This 'log outs' the session."
msgstr "「登出」連線階段。"

#: interactions.api.http.client.HTTPClient.get_current_bot_information:1 of
msgid "Returns the bot user application object without flags."
msgstr "回傳沒有flags的bot user應用程式物件。"

#: interactions.api.http.client.HTTPClient.get_current_authorisation_information:1
#: of
msgid "Returns info about the current authorization of the bot user"
msgstr "回傳關於bot user當前授權的資訊"

#: interactions.api.http.channel.ChannelRequest.get_channel:1 of
msgid ""
"Gets a channel by ID. If the channel is a thread, it also includes thread"
" members (and other thread attributes)."
msgstr "以ID取得一個頻道。如果頻道是一個討論串，包含討論串成員（和其他討論串屬性）。"

#: interactions.api.http.channel.ChannelRequest.create_channel_invite:6
#: interactions.api.http.channel.ChannelRequest.create_stage_instance:3
#: interactions.api.http.channel.ChannelRequest.delete_channel_permission:3
#: interactions.api.http.channel.ChannelRequest.delete_stage_instance:3
#: interactions.api.http.channel.ChannelRequest.edit_channel_permission:3
#: interactions.api.http.channel.ChannelRequest.get_channel:3
#: interactions.api.http.channel.ChannelRequest.get_channel_invites:3
#: interactions.api.http.channel.ChannelRequest.get_channel_messages:6
#: interactions.api.http.channel.ChannelRequest.get_pinned_messages:3
#: interactions.api.http.channel.ChannelRequest.get_stage_instance:3
#: interactions.api.http.channel.ChannelRequest.modify_channel:3
#: interactions.api.http.channel.ChannelRequest.modify_stage_instance:3
#: interactions.api.http.channel.ChannelRequest.move_channel:4
#: interactions.api.http.channel.ChannelRequest.trigger_typing:6
#: interactions.api.http.message.MessageRequest.pin_message:3
#: interactions.api.http.message.MessageRequest.unpin_message:3
#: interactions.api.http.webhook.WebhookRequest.create_webhook:3
#: interactions.api.http.webhook.WebhookRequest.get_channel_webhooks:3 of
msgid "Channel ID snowflake."
msgstr "頻道ID snowflake。"

#: interactions.api.http.channel.ChannelRequest.get_channel:4 of
msgid "Dictionary of the channel object."
msgstr "頻道物件的字典。"

#: interactions.api.http.channel.ChannelRequest.delete_channel:1 of
msgid "Deletes a channel."
msgstr "刪除一個頻道。"

#: interactions.api.http.channel.ChannelRequest.delete_channel:3 of
msgid "Channel ID snowflake"
msgstr "頻道ID snowflake"

#: interactions.api.http.channel.ChannelRequest.get_channel_messages:1 of
msgid "Get messages from a channel."
msgstr "從頻道取得訊息。"

#: interactions.api.http.channel.ChannelRequest.get_channel_messages:4 of
msgid "around, before, and after arguments are mutually exclusive."
msgstr "around, before, 和 after參數是互斥的。"

#: interactions.api.http.channel.ChannelRequest.get_channel_messages:7 of
msgid "How many messages to get. Defaults to 50, the max is 100."
msgstr "要取得多少訊息。預設為50，最大為100。"

#: interactions.api.http.channel.ChannelRequest.get_channel_messages:8 of
msgid "Get messages around this snowflake ID."
msgstr "取得這個snowflake ID周圍的訊息。"

#: interactions.api.http.channel.ChannelRequest.get_channel_messages:9 of
msgid "Get messages before this snowflake ID."
msgstr "取得這個snowflake ID之前的訊息。"

#: interactions.api.http.channel.ChannelRequest.get_channel_messages:10 of
msgid "Get messages after this snowflake ID."
msgstr "取得這個snowflake ID之後的訊息。"

#: interactions.api.http.channel.ChannelRequest.get_channel_messages:11 of
msgid "An array of Message objects."
msgstr "一個Message物件的陣列。"

#: interactions.api.http.channel.ChannelRequest.create_channel:1 of
msgid "Creates a channel within a guild."
msgstr "在伺服器內建立一個頻道。"

#: interactions.api.http.channel.ChannelRequest.create_channel:4 of
msgid "This does not handle payload in this method. Tread carefully."
msgstr "這個函數不處理payload。請小心使用。"

#: interactions.api.http.channel.ChannelRequest.create_channel:6
#: interactions.api.http.channel.ChannelRequest.move_channel:3
#: interactions.api.http.emoji.EmojiRequest.create_guild_emoji:3
#: interactions.api.http.emoji.EmojiRequest.delete_guild_emoji:3
#: interactions.api.http.emoji.EmojiRequest.get_all_emoji:3
#: interactions.api.http.emoji.EmojiRequest.get_guild_emoji:3
#: interactions.api.http.emoji.EmojiRequest.modify_guild_emoji:3
#: interactions.api.http.guild.GuildRequest.add_guild_member:3
#: interactions.api.http.guild.GuildRequest.create_auto_moderation_rule:3
#: interactions.api.http.guild.GuildRequest.create_guild_role:3
#: interactions.api.http.guild.GuildRequest.create_guild_template:3
#: interactions.api.http.guild.GuildRequest.delete_guild:3
#: interactions.api.http.guild.GuildRequest.delete_guild_integration:3
#: interactions.api.http.guild.GuildRequest.delete_guild_role:3
#: interactions.api.http.guild.GuildRequest.delete_guild_template:3
#: interactions.api.http.guild.GuildRequest.get_guild_bans:6
#: interactions.api.http.guild.GuildRequest.get_guild_integrations:3
#: interactions.api.http.guild.GuildRequest.get_guild_invites:3
#: interactions.api.http.guild.GuildRequest.get_guild_preview:3
#: interactions.api.http.guild.GuildRequest.get_guild_prune_count:3
#: interactions.api.http.guild.GuildRequest.get_guild_templates:3
#: interactions.api.http.guild.GuildRequest.get_guild_welcome_screen:3
#: interactions.api.http.guild.GuildRequest.get_guild_widget:3
#: interactions.api.http.guild.GuildRequest.get_guild_widget_image:6
#: interactions.api.http.guild.GuildRequest.get_guild_widget_settings:3
#: interactions.api.http.guild.GuildRequest.modify_auto_moderation_rule:6
#: interactions.api.http.guild.GuildRequest.modify_current_user_voice_state:3
#: interactions.api.http.guild.GuildRequest.modify_guild:3
#: interactions.api.http.guild.GuildRequest.modify_guild_role:3
#: interactions.api.http.guild.GuildRequest.modify_guild_role_positions:3
#: interactions.api.http.guild.GuildRequest.modify_guild_template:3
#: interactions.api.http.guild.GuildRequest.modify_guild_welcome_screen:3
#: interactions.api.http.guild.GuildRequest.modify_guild_widget:3
#: interactions.api.http.guild.GuildRequest.modify_user_voice_state:3
#: interactions.api.http.guild.GuildRequest.remove_guild_member:3
#: interactions.api.http.guild.GuildRequest.sync_guild_template:3
#: interactions.api.http.member.MemberRequest.get_member:3
#: interactions.api.http.member.MemberRequest.modify_member:5
#: interactions.api.http.member.MemberRequest.search_guild_members:3
#: interactions.api.http.scheduledEvent.ScheduledEventRequest.create_scheduled_event:3
#: interactions.api.http.scheduledEvent.ScheduledEventRequest.delete_scheduled_event:3
#: interactions.api.http.scheduledEvent.ScheduledEventRequest.get_scheduled_event:3
#: interactions.api.http.scheduledEvent.ScheduledEventRequest.get_scheduled_event_users:3
#: interactions.api.http.scheduledEvent.ScheduledEventRequest.get_scheduled_events:3
#: interactions.api.http.scheduledEvent.ScheduledEventRequest.modify_scheduled_event:3
#: of
msgid "Guild ID snowflake."
msgstr "伺服器ID snowflake。"

#: interactions.api.http.channel.ChannelRequest.create_channel:7 of
msgid "Payload data."
msgstr "Payload資料。"

#: interactions.api.http.channel.ChannelRequest.create_channel:8 of
msgid "Reason to show in audit log, if needed."
msgstr "如有需要，顯示在審核日誌的原因。"

#: interactions.api.http.channel.ChannelRequest.create_channel:9 of
msgid "Channel object as dictionary."
msgstr "頻道物件的字典。"

#: interactions.api.http.channel.ChannelRequest.move_channel:1 of
msgid "Moves a channel to a new position."
msgstr "將頻道移動到新的位置。"

#: interactions.api.http.channel.ChannelRequest.move_channel:5 of
msgid "The new channel position."
msgstr "新的頻道位置。"

#: interactions.api.http.channel.ChannelRequest.move_channel:6 of
msgid "The category parent ID, if needed."
msgstr "如有需要，類別父ID。"

#: interactions.api.http.channel.ChannelRequest.move_channel:7 of
msgid ""
"Sync permissions with the parent associated with parent_id. Defaults to "
"False."
msgstr "與與parent_id相關的父項同步權限。預設為False。"

#: interactions.api.http.channel.ChannelRequest.move_channel:8 of
msgid "Reason to display to the audit log, if any."
msgstr "如有需要，顯示在審核日誌的原因。"

#: interactions.api.http.channel.ChannelRequest.move_channel:9
#: interactions.api.http.webhook.WebhookRequest.execute_github_webhook:7
#: interactions.api.http.webhook.WebhookRequest.execute_slack_webhook:7 of
msgid "?"
msgstr "?"

#: interactions.api.http.channel.ChannelRequest.modify_channel:1 of
msgid "Update a channel's settings."
msgstr "更新頻道的設定。"

#: interactions.api.http.channel.ChannelRequest.modify_channel:4 of
msgid "Data representing updated settings."
msgstr "代表更新設定的資料。"

#: interactions.api.http.channel.ChannelRequest.modify_channel:5 of
msgid "Reason, if any."
msgstr "如有需要，原因。"

#: interactions.api.http.channel.ChannelRequest.modify_channel:6 of
msgid "Channel with updated attributes, if successful."
msgstr "如果成功，具有更新屬性的頻道。"

#: interactions.api.http.channel.ChannelRequest.get_channel_invites:1 of
msgid "Get the invites for the channel."
msgstr "獲取頻道的邀請。"

#: interactions.api.http.channel.ChannelRequest.get_channel_invites:4 of
msgid "List of invite objects"
msgstr "邀請物件的列表"

#: interactions.api.http.channel.ChannelRequest.create_channel_invite:1 of
msgid "Creates an invite for the given channel."
msgstr "為給定的頻道創建邀請。"

#: interactions.api.http.channel.ChannelRequest.create_channel_invite:4 of
msgid "This method does not handle payload. It just sends it."
msgstr "此函數不處理payload。只是發送它而已。"

#: interactions.api.http.channel.ChannelRequest.create_channel_invite:7 of
msgid "Data representing the payload/invite attributes."
msgstr "代表payload/邀請屬性的資料。"

#: interactions.api.http.channel.ChannelRequest.create_channel_invite:8 of
msgid "Reason to show in the audit log, if any."
msgstr "如有需要，顯示在審核日誌的原因。"

#: interactions.api.http.channel.ChannelRequest.create_channel_invite:9 of
msgid "An invite object."
msgstr "邀請物件。"

#: interactions.api.http.channel.ChannelRequest.edit_channel_permission:1 of
msgid ""
"Edits the channel's permission overwrites for a user or role in a given "
"channel."
msgstr "在給定的頻道中為用戶或身份組編輯頻道的權限覆蓋。"

#: interactions.api.http.channel.ChannelRequest.delete_channel_permission:4
#: interactions.api.http.channel.ChannelRequest.edit_channel_permission:4 of
msgid "The ID of the overridden object."
msgstr "覆蓋物件的ID。"

#: interactions.api.http.channel.ChannelRequest.edit_channel_permission:5 of
msgid "the bitwise value of all allowed permissions"
msgstr "所有允許的權限的位元值"

#: interactions.api.http.channel.ChannelRequest.edit_channel_permission:6 of
msgid "the bitwise value of all disallowed permissions"
msgstr "所有不允許的權限的位元值"

#: interactions.api.http.channel.ChannelRequest.edit_channel_permission:7 of
msgid "0 for a role or 1 for a member"
msgstr "0為身份組，1為成員"

#: interactions.api.http.channel.ChannelRequest.delete_channel_permission:5
#: interactions.api.http.channel.ChannelRequest.edit_channel_permission:8 of
msgid "Reason to display in the Audit Log, if given."
msgstr "如有需要，顯示在審核日誌的原因。"

#: interactions.api.http.channel.ChannelRequest.delete_channel_permission:1 of
msgid "Deletes a channel permission overwrite for a user or role in a channel."
msgstr "在頻道中為用戶或身份組刪除頻道權限覆蓋。"

#: interactions.api.http.channel.ChannelRequest.trigger_typing:1 of
msgid "Posts \"... is typing\" in a given channel."
msgstr "在給定的頻道中發送\"...正在打字\"。"

#: interactions.api.http.channel.ChannelRequest.trigger_typing:4 of
msgid ""
"By default, this lib doesn't use this endpoint, however, this is listed "
"for third-party implementation."
msgstr "預設情況下，此lib不使用此端點，但是，此處為第三方實現而列出。"

#: interactions.api.http.channel.ChannelRequest.get_pinned_messages:1 of
msgid "Get all pinned messages from a channel."
msgstr "從頻道中獲取所有已釘選的訊息。"

#: interactions.api.http.channel.ChannelRequest.get_pinned_messages:4 of
msgid "A list of pinned message objects."
msgstr "已釘選訊息物件的列表。"

#: interactions.api.http.channel.ChannelRequest.create_stage_instance:1 of
msgid "Create a new stage instance."
msgstr "創建新的舞臺實例。"

#: interactions.api.http.channel.ChannelRequest.create_stage_instance:4 of
msgid "The topic of the stage instance. Limited to 1-120 characters."
msgstr "舞臺實例主題。限制為1-120個字符。"

#: interactions.api.http.channel.ChannelRequest.create_stage_instance:5 of
msgid "The privacy_level of the stage instance (defaults to guild-only \"1\")."
msgstr "舞臺實例隱私級別（預設為僅限伺服器 \"1\"）。"

#: interactions.api.http.channel.ChannelRequest.create_stage_instance:6
#: interactions.api.http.channel.ChannelRequest.delete_stage_instance:4
#: interactions.api.http.channel.ChannelRequest.modify_stage_instance:6 of
msgid "The reason for the creating the stage instance, if any."
msgstr "如有需要，創建舞臺實例的原因。"

#: interactions.api.http.channel.ChannelRequest.create_stage_instance:7 of
msgid "The new stage instance"
msgstr "新的舞臺實例"

#: interactions.api.http.channel.ChannelRequest.get_stage_instance:1 of
msgid "Get the stage instance associated with a given channel, if it exists."
msgstr "如果存在，獲取與給定頻道關聯的舞臺實例。"

#: interactions.api.http.channel.ChannelRequest.get_stage_instance:4 of
msgid "A stage instance."
msgstr "舞臺實例。"

#: interactions.api.http.channel.ChannelRequest.modify_stage_instance:1 of
msgid "Update the fields of a given stage instance."
msgstr "更新給定舞臺實例的字段。"

#: interactions.api.http.channel.ChannelRequest.modify_stage_instance:4 of
msgid ""
"The new topic of the stage instance, if given. Limited to 1-120 "
"characters."
msgstr "如有需要，舞臺實例的新主題。限制為1-120個字符。"

#: interactions.api.http.channel.ChannelRequest.modify_stage_instance:5 of
msgid "The new privacy_level of the stage instance."
msgstr "舞臺實例的新隱私級別。"

#: interactions.api.http.channel.ChannelRequest.modify_stage_instance:7 of
msgid "The updated stage instance."
msgstr "更新的舞臺實例。"

#: interactions.api.http.channel.ChannelRequest.delete_stage_instance:1 of
msgid "Delete a stage instance."
msgstr "刪除舞臺實例。"

#: interactions.api.http.emoji.EmojiRequest.get_all_emoji:1 of
msgid "Gets all emojis from a guild."
msgstr "從伺服器中獲取所有表情符號。"

#: interactions.api.http.emoji.EmojiRequest.get_all_emoji:4 of
msgid "A list of emojis."
msgstr "表情符號列表。"

#: interactions.api.http.emoji.EmojiRequest.get_guild_emoji:1 of
msgid "Gets an emote from a guild."
msgstr "從伺服器中獲取一個表情符號。"

#: interactions.api.http.emoji.EmojiRequest.get_guild_emoji:4 of
msgid "Emoji ID snowflake."
msgstr "表情符號ID snowflake。"

#: interactions.api.http.emoji.EmojiRequest.get_guild_emoji:5 of
msgid "Emoji object"
msgstr "表情符號物件"

#: interactions.api.http.emoji.EmojiRequest.create_guild_emoji:1 of
msgid "Creates an emoji."
msgstr "創建表情符號。"

#: interactions.api.http.emoji.EmojiRequest.create_guild_emoji:4 of
msgid "Emoji parameters."
msgstr "表情符號參數。"

#: interactions.api.http.emoji.EmojiRequest.create_guild_emoji:5
#: interactions.api.http.emoji.EmojiRequest.delete_guild_emoji:5
#: interactions.api.http.emoji.EmojiRequest.modify_guild_emoji:6 of
msgid "Optionally, give a reason."
msgstr "可選地，給出原因。"

#: interactions.api.http.emoji.EmojiRequest.create_guild_emoji:6 of
msgid "An emoji object with the included parameters."
msgstr "具有包含參數的表情符號物件。"

#: interactions.api.http.emoji.EmojiRequest.modify_guild_emoji:1 of
msgid "Modifies an emoji."
msgstr "修改表情符號。"

#: interactions.api.http.emoji.EmojiRequest.delete_guild_emoji:4
#: interactions.api.http.emoji.EmojiRequest.modify_guild_emoji:4 of
msgid "Emoji ID snowflake"
msgstr "表情符號ID snowflake"

#: interactions.api.http.emoji.EmojiRequest.modify_guild_emoji:5 of
msgid "Emoji parameters with updated attributes"
msgstr "具有更新屬性的表情符號參數"

#: interactions.api.http.emoji.EmojiRequest.modify_guild_emoji:7 of
msgid "An emoji object with updated attributes."
msgstr "具有更新屬性的表情符號物件。"

#: interactions.api.http.emoji.EmojiRequest.delete_guild_emoji:1 of
msgid "Deletes an emoji."
msgstr "刪除表情符號。"

#: interactions.api.http.guild.GuildRequest.get_self_guilds:1 of
msgid "Gets all guild objects associated with the current bot user."
msgstr "獲取與當前機器人用戶關聯的所有伺服器物件。"

#: interactions.api.http.guild.GuildRequest.get_self_guilds:3 of
msgid ":return a list of partial guild objects the current bot user is a part of."
msgstr "回傳當前機器人用戶所屬的伺服器物件列表。"

#: interactions.api.http.guild.GuildRequest.get_guild:1 of
msgid "Requests an individual guild from the API."
msgstr "從API請求單個伺服器。"

#: interactions.api.http.guild.GuildRequest.get_guild:3
#: interactions.api.http.guild.GuildRequest.leave_guild:3 of
msgid "The guild snowflake ID associated."
msgstr "關聯的伺服器snowflake ID。"

#: interactions.api.http.guild.GuildRequest.get_guild:4 of
msgid "Whether the approximate member count should be included"
msgstr "是否應包含大約成員數"

#: interactions.api.http.guild.GuildRequest.get_guild:5 of
msgid "The guild object associated, if any."
msgstr "關聯的伺服器物件，如有。"

#: interactions.api.http.guild.GuildRequest.get_guild_preview:1 of
msgid "Get a guild's preview."
msgstr "獲取伺服器預覽。"

#: interactions.api.http.guild.GuildRequest.get_guild_preview:4 of
msgid "Guild Preview object associated with the snowflake"
msgstr "與snowflake關聯的伺服器預覽物件"

#: interactions.api.http.guild.GuildRequest.modify_guild:1 of
msgid "Modifies a guild's attributes."
msgstr "修改伺服器的屬性。"

#: interactions.api.http.guild.GuildRequest.modify_guild:4 of
msgid "The parameters to change."
msgstr "要更改的參數。"

#: interactions.api.http.guild.GuildRequest.modify_guild:5 of
msgid "Reason to send to the audit log, if given."
msgstr "發送到審核日誌的原因，如有。"

#: interactions.api.http.guild.GuildRequest.modify_guild:6 of
msgid "The modified guild object as a dictionary"
msgstr "作為字典的修改後的伺服器物件"

#: interactions.api.http.guild.GuildRequest.leave_guild:1 of
msgid "Leaves a guild."
msgstr "離開伺服器。"

#: interactions.api.http.guild.GuildRequest.leave_guild:4 of
msgid "None"
msgstr "None"

#: interactions.api.http.guild.GuildRequest.delete_guild:1 of
msgid "Deletes a guild."
msgstr "刪除伺服器。"

#: interactions.api.http.guild.GuildRequest.get_guild_widget:1 of
msgid "Returns the widget for the guild."
msgstr "回傳伺服器的小工具。"

#: interactions.api.http.guild.GuildRequest.get_guild_widget:4
#: interactions.api.http.guild.GuildRequest.get_guild_widget_settings:4 of
msgid "Guild Widget contents as a dict: {\"enabled\":bool, \"channel_id\": str}"
msgstr "伺服器小工具內容為字典：{\"enabled\":bool, \"channel_id\": str}"

#: interactions.api.http.guild.GuildRequest.get_guild_widget_settings:1 of
msgid "Get guild widget settings."
msgstr "獲取伺服器小工具設置。"

#: interactions.api.http.guild.GuildRequest.get_guild_widget_image:1 of
msgid "Get an url representing a png image widget for the guild."
msgstr "獲取一個表示伺服器小工具的png圖像url。"

#: interactions.api.http.guild.GuildRequest.get_guild_widget_image:4 of
msgid ""
"See _<https://discord.com/developers/docs/resources/guild#get-guild-"
"widget-image> for list of styles."
msgstr "有關樣式列表，請參閱 _<https://discord.com/developers/docs/resources/guild#get-guild-widget-image>。"

#: interactions.api.http.guild.GuildRequest.get_guild_widget_image:7 of
msgid "The style of widget required, if given."
msgstr "所需的小工具樣式，如有。"

#: interactions.api.http.guild.GuildRequest.get_guild_widget_image:8 of
msgid "A url pointing to this image"
msgstr "指向此圖像的url"

#: interactions.api.http.guild.GuildRequest.modify_guild_widget:1 of
msgid "Modify a guild widget."
msgstr "修改伺服器小工具。"

#: interactions.api.http.guild.GuildRequest.modify_guild_widget:4 of
msgid "Payload containing new widget attributes."
msgstr "包含新小工具屬性的有效負載。"

#: interactions.api.http.guild.GuildRequest.modify_guild_widget:5 of
msgid "Updated widget attributes."
msgstr "更新的小工具屬性。"

#: interactions.api.http.guild.GuildRequest.get_guild_invites:1 of
msgid "Retrieves a list of invite objects with their own metadata."
msgstr "獲取帶有自己元數據的邀請物件列表。"

#: interactions.api.http.guild.GuildRequest.get_guild_invites:4 of
msgid "A list of invite objects"
msgstr "邀請物件列表"

#: interactions.api.http.guild.GuildRequest.get_guild_welcome_screen:1 of
msgid "Retrieves from the API a welcome screen associated with the guild."
msgstr "從API獲取與伺服器關聯的歡迎屏幕。"

#: interactions.api.http.guild.GuildRequest.get_guild_welcome_screen:4 of
msgid "Welcome Screen object"
msgstr "歡迎屏幕物件"

#: interactions.api.http.guild.GuildRequest.modify_guild_welcome_screen:1 of
msgid "Modify the guild's welcome screen."
msgstr "修改伺服器的歡迎屏幕。"

#: interactions.api.http.guild.GuildRequest.modify_guild_welcome_screen:4 of
msgid "Whether the welcome screen is enabled or not."
msgstr "歡迎屏幕是否啟用。"

#: interactions.api.http.guild.GuildRequest.modify_guild_welcome_screen:5 of
msgid ""
"The new channels (by their ID) linked in the welcome screen and their "
"display options"
msgstr "歡迎屏幕中的新頻道（按其ID）及其顯示選項"

#: interactions.api.http.guild.GuildRequest.modify_guild_welcome_screen:6 of
msgid "The new server description to show in the welcome screen"
msgstr "歡迎屏幕中顯示的新伺服器描述"

#: interactions.api.http.guild.GuildRequest.modify_guild_welcome_screen:7 of
msgid "Updated Welcome screen object."
msgstr "更新後的歡迎屏幕物件。"

#: interactions.api.http.guild.GuildRequest.get_guild_integrations:1 of
msgid "Gets a list of integration objects associated with the Guild from the API."
msgstr "從API獲取與伺服器關聯的整合物件列表。"

#: interactions.api.http.guild.GuildRequest.get_guild_integrations:4 of
msgid "An array of integration objects"
msgstr "整合物件數組"

#: interactions.api.http.guild.GuildRequest.delete_guild_integration:1 of
msgid "Deletes an integration from the guild."
msgstr "從伺服器中刪除整合。"

#: interactions.api.http.guild.GuildRequest.delete_guild_integration:4 of
msgid "Integration ID snowflake."
msgstr "整合ID snowflake。"

#: interactions.api.http.guild.GuildRequest.modify_current_user_voice_state:1
#: of
msgid "Update the current user voice state."
msgstr "更新當前用戶的語音狀態。"

#: interactions.api.http.guild.GuildRequest.modify_current_user_voice_state:4
#: interactions.api.http.guild.GuildRequest.modify_user_voice_state:5 of
msgid "Voice channel ID snowflake."
msgstr "語音頻道ID snowflake。"

#: interactions.api.http.guild.GuildRequest.modify_current_user_voice_state:5
#: of
msgid "Toggle the user's suppress state, if given."
msgstr "切換用戶的禁止狀態，如有。"

#: interactions.api.http.guild.GuildRequest.modify_current_user_voice_state:6
#: of
msgid "Sets the user's request to speak, if given."
msgstr "設置用戶的請求發言，如有。"

#: interactions.api.http.guild.GuildRequest.modify_user_voice_state:1 of
msgid "Modify the voice state of a user."
msgstr "修改用戶的語音狀態。"

#: interactions.api.http.guild.GuildRequest.add_guild_member:4
#: interactions.api.http.guild.GuildRequest.get_user_ban:4
#: interactions.api.http.guild.GuildRequest.modify_user_voice_state:4
#: interactions.api.http.guild.GuildRequest.remove_guild_member:4 of
msgid "User ID snowflake."
msgstr "用戶ID snowflake。"

#: interactions.api.http.guild.GuildRequest.modify_user_voice_state:6 of
msgid "Toggles the user's suppress state, if given."
msgstr "切換用戶的禁止狀態，如有。"

#: interactions.api.http.guild.GuildRequest.create_guild_from_guild_template:1
#: of
msgid "Create a new guild based on a template."
msgstr "基於模板創建新伺服器。"

#: interactions.api.http.guild.GuildRequest.create_guild_from_guild_template:4
#: of
msgid "This endpoint can only be used by bots in less than 10 guilds."
msgstr "此端點只能由少於10個伺服器的機器人使用。"

#: interactions.api.http.guild.GuildRequest.create_guild_from_guild_template:6
#: of
msgid "The code of the template to use."
msgstr "要使用的模板的代碼。"

#: interactions.api.http.guild.GuildRequest.create_guild_from_guild_template:7
#: of
msgid "The name of the guild (2-100 characters)"
msgstr "伺服器的名稱（2-100個字符）"

#: interactions.api.http.guild.GuildRequest.create_guild_from_guild_template:8
#: of
msgid "Guild icon URI, if given."
msgstr "伺服器圖標URI，如有。"

#: interactions.api.http.guild.GuildRequest.create_guild_from_guild_template:9
#: of
msgid "The newly created guild object."
msgstr "新創建的伺服器物件。"

#: interactions.api.http.guild.GuildRequest.get_guild_templates:1 of
msgid "Returns an array of guild templates."
msgstr "回傳伺服器模板數組。"

#: interactions.api.http.guild.GuildRequest.get_guild_templates:4 of
msgid "An array of guild templates"
msgstr "伺服器模板數組"

#: interactions.api.http.guild.GuildRequest.create_guild_template:1 of
msgid "Create a guild template for the guild."
msgstr "為伺服器創建伺服器模板。"

#: interactions.api.http.guild.GuildRequest.create_guild_template:4
#: interactions.api.http.guild.GuildRequest.modify_guild_template:5 of
msgid "The name of the template"
msgstr "模板的名稱"

#: interactions.api.http.guild.GuildRequest.create_guild_template:5 of
msgid "The description of the template, if given."
msgstr "模板的描述，如有。"

#: interactions.api.http.guild.GuildRequest.create_guild_template:6 of
msgid "The created guild template"
msgstr "創建的伺服器模板"

#: interactions.api.http.guild.GuildRequest.sync_guild_template:1 of
msgid "Sync the template to the guild's current state."
msgstr "將模板同步到伺服器的當前狀態。"

#: interactions.api.http.guild.GuildRequest.sync_guild_template:4 of
msgid "The code for the template to sync"
msgstr "要同步的模板的代碼"

#: interactions.api.http.guild.GuildRequest.sync_guild_template:5 of
msgid "The updated guild template."
msgstr "更新的伺服器模板。"

#: interactions.api.http.guild.GuildRequest.modify_guild_template:1 of
msgid "Modify a guild template."
msgstr "修改伺服器模板。"

#: interactions.api.http.guild.GuildRequest.delete_guild_template:4
#: interactions.api.http.guild.GuildRequest.modify_guild_template:4 of
msgid "Template ID."
msgstr "模板ID。"

#: interactions.api.http.guild.GuildRequest.modify_guild_template:6 of
msgid "The description of the template"
msgstr "模板的描述"

#: interactions.api.http.guild.GuildRequest.modify_guild_template:7 of
msgid "The updated guild template"
msgstr "更新的伺服器模板"

#: interactions.api.http.guild.GuildRequest.delete_guild_template:1 of
msgid "Delete the guild template."
msgstr "刪除伺服器模板。"

#: interactions.api.http.guild.GuildRequest.delete_guild_template:5 of
msgid "The deleted template object"
msgstr "已刪除的模板物件"

#: interactions.api.http.guild.GuildRequest.get_all_channels:1 of
msgid "Requests from the API to get all channels in the guild."
msgstr "從API請求獲取伺服器中的所有頻道。"

#: interactions.api.http.guild.GuildRequest.get_all_channels:3 of
msgid "Guild Snowflake ID"
msgstr "伺服器Snowflake ID"

#: interactions.api.http.guild.GuildRequest.get_all_channels:4 of
msgid "A list of channels."
msgstr "頻道列表。"

#: interactions.api.http.guild.GuildRequest.get_all_roles:1 of
msgid "Gets all roles from a Guild."
msgstr "從伺服器獲取所有身份組。"

#: interactions.api.http.guild.GuildRequest.create_guild_ban:3
#: interactions.api.http.guild.GuildRequest.create_guild_kick:3
#: interactions.api.http.guild.GuildRequest.get_all_roles:3
#: interactions.api.http.guild.GuildRequest.get_user_ban:3
#: interactions.api.http.guild.GuildRequest.remove_guild_ban:3
#: interactions.api.http.interaction.InteractionRequest.edit_application_command_permissions:8
#: interactions.api.http.interaction.InteractionRequest.get_all_application_command_permissions:4
#: interactions.api.http.interaction.InteractionRequest.get_application_command_permissions:4
#: interactions.api.http.member.MemberRequest.get_list_of_members:3
#: interactions.api.http.webhook.WebhookRequest.get_guild_webhooks:3 of
msgid "Guild ID snowflake"
msgstr "伺服器ID snowflake"

#: interactions.api.http.guild.GuildRequest.get_all_roles:4 of
msgid "An array of Role objects as dictionaries."
msgstr "身份組物件數組。"

#: interactions.api.http.guild.GuildRequest.create_guild_role:1 of
msgid "Create a new role for the guild."
msgstr "為伺服器創建新身份組。"

#: interactions.api.http.guild.GuildRequest.create_guild_role:4 of
msgid "A dict containing metadata for the role."
msgstr "身份組的元數據字典。"

#: interactions.api.http.guild.GuildRequest.create_guild_role:5
#: interactions.api.http.guild.GuildRequest.modify_guild_role:6
#: interactions.api.http.guild.GuildRequest.modify_guild_role_positions:5 of
msgid "The reason for this action, if given."
msgstr "此操作的原因，如有。"

#: interactions.api.http.guild.GuildRequest.create_guild_role:6 of
msgid "Role object"
msgstr "身份組物件"

#: interactions.api.http.guild.GuildRequest.modify_guild_role_positions:1 of
msgid "Modify the position of a role in the guild."
msgstr "修改伺服器中身份組的位置。"

#: interactions.api.http.guild.GuildRequest.modify_guild_role_positions:4 of
msgid ""
"A list of dicts containing the role IDs and new positions for all the "
"roles to be moved."
msgstr "包含所有要移動的身份組的身份組ID和新位置的字典列表。"

#: interactions.api.http.guild.GuildRequest.modify_guild_role_positions:6 of
msgid "List of guild roles with updated hierarchy."
msgstr "具有更新層次結構的伺服器身份組列表。"

#: interactions.api.http.guild.GuildRequest.modify_guild_role:1 of
msgid "Modify a given role for the guild."
msgstr "修改伺服器中的身份組。"

#: interactions.api.http.guild.GuildRequest.delete_guild_role:4
#: interactions.api.http.guild.GuildRequest.modify_guild_role:4 of
msgid "Role ID snowflake."
msgstr "身份組ID snowflake。"

#: interactions.api.http.guild.GuildRequest.modify_guild_role:5 of
msgid "A dict containing updated metadata for the role."
msgstr "身份組的更新元數據字典。"

#: interactions.api.http.guild.GuildRequest.modify_guild_role:7 of
msgid "Updated role object."
msgstr "更新的身份組物件。"

#: interactions.api.http.guild.GuildRequest.delete_guild_role:1 of
msgid "Delete a guild role."
msgstr "刪除伺服器身份組。"

#: interactions.api.http.guild.GuildRequest.delete_guild_role:5 of
msgid "The reason for this action, if any."
msgstr "此操作的原因，如有。"

#: interactions.api.http.guild.GuildRequest.create_guild_kick:1 of
msgid "Kicks a person from the guild."
msgstr "從伺服器踢出一個人。"

#: interactions.api.http.guild.GuildRequest.create_guild_ban:4
#: interactions.api.http.guild.GuildRequest.create_guild_kick:4
#: interactions.api.http.guild.GuildRequest.remove_guild_ban:4 of
msgid "User ID snowflake"
msgstr "用戶ID snowflake"

#: interactions.api.http.guild.GuildRequest.create_guild_kick:5 of
msgid "Optional Reason argument."
msgstr "可選的原因參數。"

#: interactions.api.http.guild.GuildRequest.create_guild_ban:1 of
msgid ""
"Bans a person from the guild, and optionally deletes previous messages "
"sent by them."
msgstr "從伺服器封禁一個人，並可選擇刪除他們之前發送的訊息。"

#: interactions.api.http.guild.GuildRequest.create_guild_ban:5 of
msgid "Number of days to delete messages, from 0 to 7. Defaults to 0"
msgstr "刪除訊息的天數，從0到7。預設為0"

#: interactions.api.http.guild.GuildRequest.create_guild_ban:6 of
msgid "Optional reason to ban."
msgstr "可選的封禁原因。"

#: interactions.api.http.guild.GuildRequest.remove_guild_ban:1 of
msgid "Unbans someone using the API."
msgstr "使用API解除封禁某人。"

#: interactions.api.http.guild.GuildRequest.remove_guild_ban:5 of
msgid "Optional reason to unban."
msgstr "可選的解封原因。"

#: interactions.api.http.guild.GuildRequest.get_guild_bans:1 of
msgid "Gets a list of banned users."
msgstr "獲取被封禁用戶的列表。"

#: interactions.api.http.guild.GuildRequest.get_guild_bans:4 of
msgid ""
"If both ``before`` and ``after`` are provided, only ``before`` is "
"respected."
msgstr "如果提供了 ``before`` 和 ``after`` ，則只有 ``before`` 被使用。"

#: interactions.api.http.guild.GuildRequest.get_guild_bans:7 of
msgid "Number of users to return. Defaults to 1000."
msgstr "要回傳的用戶數。預設為1000。"

#: interactions.api.http.guild.GuildRequest.get_guild_bans:8 of
msgid "Consider only users before the given User ID snowflake."
msgstr "只考慮在給定的用戶ID snowflake之前的用戶。"

#: interactions.api.http.guild.GuildRequest.get_guild_bans:9 of
msgid "Consider only users after the given User ID snowflake."
msgstr "只考慮在給定的用戶ID snowflake之後的用戶。"

#: interactions.api.http.guild.GuildRequest.get_guild_bans:10 of
msgid "A list of banned users."
msgstr "被封禁用戶的列表。"

#: interactions.api.http.guild.GuildRequest.get_user_ban:1 of
msgid ""
"Gets an object pertaining to the user, if it exists. Returns a 404 if it "
"doesn't."
msgstr "獲取與用戶有關的物件，如果存在的話。如果不存在，則回傳404。"

#: interactions.api.http.guild.GuildRequest.get_user_ban:5 of
msgid "Ban object if it exists."
msgstr "如果存在，則為封禁物件。"

#: interactions.api.http.guild.GuildRequest.add_guild_member:1 of
msgid ""
"A low level method of adding a user to a guild with pre-defined "
"attributes."
msgstr "使用預定義屬性將用戶添加到伺服器的低級函數。"

#: interactions.api.http.guild.GuildRequest.add_guild_member:5 of
msgid "User access token."
msgstr "用戶訪問token。"

#: interactions.api.http.guild.GuildRequest.add_guild_member:6 of
msgid "User's nickname on join."
msgstr "加入時的用戶暱稱。"

#: interactions.api.http.guild.GuildRequest.add_guild_member:7 of
msgid "An array of roles that the user is assigned."
msgstr "用戶被分配的身份組數組。"

#: interactions.api.http.guild.GuildRequest.add_guild_member:8 of
msgid "Whether the user is mute in voice channels."
msgstr "用戶是否在語音頻道中被禁言。"

#: interactions.api.http.guild.GuildRequest.add_guild_member:9 of
msgid "Whether the user is deafened in voice channels."
msgstr "用戶是否在語音頻道中被拒聽。"

#: interactions.api.http.guild.GuildRequest.add_guild_member:10 of
msgid "Guild member object as dictionary"
msgstr "作為字典的伺服器成員物件"

#: interactions.api.http.guild.GuildRequest.remove_guild_member:1 of
msgid ""
"A low level method of removing a member from a guild. This is different "
"from banning them."
msgstr "從伺服器中刪除成員的低級函數。這與封禁他們不同。"

#: interactions.api.http.guild.GuildRequest.create_auto_moderation_rule:12
#: interactions.api.http.guild.GuildRequest.modify_auto_moderation_rule:15
#: interactions.api.http.guild.GuildRequest.remove_guild_member:5 of
msgid "Reason to send to audit log, if any."
msgstr "發送到審核日誌的原因，如果有的話。"

#: interactions.api.http.guild.GuildRequest.get_guild_prune_count:1 of
msgid ""
"Retrieves a dict from an API that results in how many members would be "
"pruned given the amount of days."
msgstr "從API中獲取一個字典，該字典結果為給定天數會被移除的成員數量。"

#: interactions.api.http.guild.GuildRequest.get_guild_prune_count:4 of
msgid "Number of days to count. Defaults to ``7``."
msgstr "要計算的天數。預設為 ``7`` 。"

#: interactions.api.http.guild.GuildRequest.get_guild_prune_count:5 of
msgid "Role IDs to include, if given."
msgstr "要包含的身份組ID，如果有的話。"

#: interactions.api.http.guild.GuildRequest.get_guild_prune_count:6 of
msgid "A dict denoting `{\"pruned\": int}`"
msgstr "一個字典，表示 `{\"pruned\": int}`"

#: interactions.api.http.guild.GuildRequest.get_guild_auditlog:1 of
msgid ""
"Returns an audit log object for the guild. Requires the 'VIEW_AUDIT_LOG' "
"permission. :param guild_id: Guild ID snowflake. :param user_id: User ID "
"snowflake. filter the log for actions made by a user. :param action_type:"
" the type ID of audit log event. :param before: filter the log before a "
"certain entry id. :param limit: how many entries are returned (default "
"50, minimum 1, maximum 100)"
msgstr "回傳伺服器的審核日誌。 需要 'VIEW_AUDIT_LOG' 權限。 :param guild_id: 伺服器 ID snowflake。 :param user_id: 用戶 ID snowflake。 過濾日誌以查找用戶所做的操作。 :param action_type：審核日誌事件的類型 ID。 :param before：過濾某個條目 id 之前的日誌。 :param 限制：回傳多少條目（預設 50，最小 1，最大 100）"

#: interactions.api.http.guild.GuildRequest.list_auto_moderation_rules:1 of
msgid ""
"Returns a list of all AutoMod rules in a guild. :poram guild_id: Guild ID"
" snowflake. :return: A list of dictionaries containing the automod rules."
msgstr "回傳伺服器中所有AutoMod規則的列表。 :poram guild_id: 伺服器 ID snowflake。 :return: 包含自動檢測規則的字典列表。"

#: interactions.api.http.guild.GuildRequest.get_auto_moderation_rule:1 of
msgid ""
"Get a single AutoMod rule in a guild. :param guild_id: Guild ID "
"snowflake. :param rule_id: Rule ID snowflake. :return: A dictionary "
"containing the automod rule."
msgstr "獲取伺服器中的單個AutoMod規則。 :param guild_id: 伺服器 ID snowflake。 :param rule_id: 規則 ID snowflake。 :return: 包含自動檢測規則的字典。"

#: interactions.api.http.guild.GuildRequest.create_auto_moderation_rule:1 of
msgid "Create a new AutoMod rule in a guild."
msgstr "在伺服器中創建一個新的AutoMod規則。"

#: interactions.api.http.guild.GuildRequest.create_auto_moderation_rule:4 of
msgid "The name of the new rule."
msgstr "新規則的名稱。"

#: interactions.api.http.guild.GuildRequest.create_auto_moderation_rule:5 of
msgid "The event type of the new rule."
msgstr "新規則的事件類型。"

#: interactions.api.http.guild.GuildRequest.create_auto_moderation_rule:6 of
msgid "The trigger type of the new rule."
msgstr "新規則的觸發類型。"

#: interactions.api.http.guild.GuildRequest.create_auto_moderation_rule:7 of
msgid ""
"The trigger metadata payload representation. This can be omitted based on"
" the trigger type."
msgstr "觸發元數據有效負載表示。根據觸發類型，可以省略此項。"

#: interactions.api.http.guild.GuildRequest.create_auto_moderation_rule:8 of
msgid "The actions that will execute when the rule is triggered."
msgstr "當規則被觸發時將執行的操作。"

#: interactions.api.http.guild.GuildRequest.create_auto_moderation_rule:9 of
msgid "Whether the rule will be enabled upon creation. False by default."
msgstr "創建規則時是否啟用。預設為 False。"

#: interactions.api.http.guild.GuildRequest.create_auto_moderation_rule:10
#: interactions.api.http.guild.GuildRequest.modify_auto_moderation_rule:13 of
msgid ""
"The role IDs that are whitelisted by the rule, if given. The maximum is "
"20."
msgstr "規則白名單中的身份組 ID，如有。最多為 20。"

#: interactions.api.http.guild.GuildRequest.create_auto_moderation_rule:11
#: interactions.api.http.guild.GuildRequest.modify_auto_moderation_rule:14 of
msgid ""
"The channel IDs that are whitelisted by the rule, if given. The maximum "
"is 20"
msgstr "規則白名單中的頻道 ID，如有。最多為 20"

#: interactions.api.http.guild.GuildRequest.create_auto_moderation_rule:13 of
msgid "A dictionary containing the new automod rule."
msgstr "包含新自動檢測規則的字典。"

#: interactions.api.http.guild.GuildRequest.modify_auto_moderation_rule:1 of
msgid "Modify an existing AutoMod rule in a guild."
msgstr "修改伺服器中現有的AutoMod規則。"

#: interactions.api.http.guild.GuildRequest.modify_auto_moderation_rule:4 of
msgid "All parameters besides guild and rule ID are optional."
msgstr "除了伺服器和規則 ID 之外的所有參數都是可選的。"

#: interactions.api.http.guild.GuildRequest.modify_auto_moderation_rule:7 of
msgid "Rule ID snowflake."
msgstr "規則 ID snowflake。"

#: interactions.api.http.guild.GuildRequest.modify_auto_moderation_rule:8 of
msgid "The new name of the rule."
msgstr "規則的新名稱。"

#: interactions.api.http.guild.GuildRequest.modify_auto_moderation_rule:9 of
msgid "The new event type of the rule."
msgstr "規則的新事件類型。"

#: interactions.api.http.guild.GuildRequest.modify_auto_moderation_rule:10 of
msgid ""
"The new trigger metadata payload representation. This can be omitted "
"based on the trigger type."
msgstr "新的觸發元數據有效負載表示。根據觸發類型，可以省略此項。"

#: interactions.api.http.guild.GuildRequest.modify_auto_moderation_rule:11 of
msgid "The new actions that will execute when the rule is triggered."
msgstr "當規則被觸發時將執行的新操作。"

#: interactions.api.http.guild.GuildRequest.modify_auto_moderation_rule:12 of
msgid "Whether the rule will be enabled upon creation."
msgstr "創建規則時是否啟用。"

#: interactions.api.http.guild.GuildRequest.modify_auto_moderation_rule:16 of
msgid "A dictionary containing the updated automod rule."
msgstr "包含更新的自動檢測規則的字典。"

#: interactions.api.http.guild.GuildRequest.delete_auto_moderation_rule:1 of
msgid ""
"Deletes an AutoMod rule. :param guild_id: Guild ID snowflake. :param "
"rule_id: Rule ID snowflake. :param reason: Reason to send to audit log, "
"if any."
msgstr "刪除一個AutoMod規則。:param guild_id: 伺服器 ID snowflake。:param rule_id: 規則 ID snowflake。:param reason: 發送到審核日誌的原因，如果有的話。"

#: interactions.api.http.interaction.InteractionRequest.get_application_commands:1
#: of
msgid "Get all application commands from an application."
msgstr "從應用程式獲取所有應用程式命令。"

#: interactions.api.http.interaction.InteractionRequest.create_application_command:3
#: interactions.api.http.interaction.InteractionRequest.create_interaction_response:4
#: interactions.api.http.interaction.InteractionRequest.edit_application_command_permissions:7
#: interactions.api.http.interaction.InteractionRequest.get_all_application_command_permissions:3
#: interactions.api.http.interaction.InteractionRequest.get_application_command_permissions:3
#: interactions.api.http.interaction.InteractionRequest.get_application_commands:3
#: interactions.api.http.interaction.InteractionRequest.overwrite_application_command:6
#: of
msgid "Application ID snowflake"
msgstr "應用程式 ID snowflake"

#: interactions.api.http.interaction.InteractionRequest.get_application_commands:4
#: of
msgid "Guild to get commands from, if specified. Defaults to global (None)"
msgstr "從中獲取命令的伺服器，如有指定。預設為全局（None）"

#: interactions.api.http.interaction.InteractionRequest.get_application_commands:5
#: of
msgid ""
"Whether to include full localization dictionaries (name_localizations and"
" description_localizations) in the returned objects, instead of the "
"name_localized and description_localized fields. Default false."
msgstr "是否在回傳的物品中包含完整的本地化字典（name_localizations 和 description_localizations），而不是 name_localized 和 description_localized 字段。預設為 false。"

#: interactions.api.http.interaction.InteractionRequest.get_application_commands:6
#: of
msgid "A list of Application commands."
msgstr "應用程式命令的列表。"

#: interactions.api.http.interaction.InteractionRequest.create_application_command:1
#: of
msgid "Registers to the Discord API an application command."
msgstr "向Discord API註冊應用程式命令。"

#: interactions.api.http.interaction.InteractionRequest.create_application_command:4
#: interactions.api.http.interaction.InteractionRequest.overwrite_application_command:7
#: of
msgid "The dictionary that contains the command (name, description, etc)"
msgstr "包含命令（名稱，描述等）的字典"

#: interactions.api.http.interaction.InteractionRequest.create_application_command:5
#: interactions.api.http.interaction.InteractionRequest.overwrite_application_command:8
#: of
msgid "Guild ID snowflake to put them in, if applicable."
msgstr "伺服器 ID snowflake，如果適用的話。"

#: interactions.api.http.interaction.InteractionRequest.create_application_command:6
#: of
msgid "An application command object."
msgstr "應用程式命令物品。"

#: interactions.api.http.interaction.InteractionRequest.overwrite_application_command:1
#: of
msgid ""
"Overwrites application command(s) from a scope to the new, updated "
"commands."
msgstr "將應用程式命令從範圍覆蓋到新的、更新的命令。"

#: interactions.api.http.interaction.InteractionRequest.overwrite_application_command:4
#: of
msgid ""
"This applies to all forms of application commands (slash and context "
"menus)"
msgstr "這適用於所有形式的應用程式命令（斜線和context菜單）"

#: interactions.api.http.interaction.InteractionRequest.overwrite_application_command:9
#: of
msgid "An array of application command objects."
msgstr "應用程式命令物品的數組。"

#: interactions.api.http.interaction.InteractionRequest.edit_application_command:1
#: of
msgid "Edits an application command."
msgstr "編輯應用程式命令。"

#: interactions.api.http.interaction.InteractionRequest.delete_application_command:3
#: interactions.api.http.interaction.InteractionRequest.delete_interaction_response:4
#: interactions.api.http.interaction.InteractionRequest.edit_application_command:3
#: interactions.api.http.interaction.InteractionRequest.edit_interaction_response:5
#: interactions.api.http.interaction.InteractionRequest.get_original_interaction_response:4
#: of
msgid "Application ID snowflake."
msgstr "應用程式 ID snowflake。"

#: interactions.api.http.interaction.InteractionRequest.edit_application_command:4
#: of
msgid "A dictionary containing updated attributes"
msgstr "包含更新的屬性的字典"

#: interactions.api.http.interaction.InteractionRequest.edit_application_command:5
#: of
msgid "The application command ID snowflake"
msgstr "應用程式命令 ID snowflake"

#: interactions.api.http.interaction.InteractionRequest.edit_application_command:6
#: of
msgid "Guild ID snowflake, if given. Defaults to None/global."
msgstr "伺服器 ID snowflake，如有。預設為 None/全局。"

#: interactions.api.http.interaction.InteractionRequest.edit_application_command:7
#: of
msgid "The updated application command object."
msgstr "更新的應用程式命令物品。"

#: interactions.api.http.interaction.InteractionRequest.delete_application_command:1
#: of
msgid "Deletes an application command."
msgstr "刪除應用程式命令。"

#: interactions.api.http.interaction.InteractionRequest.delete_application_command:4
#: of
msgid "Application command ID snowflake."
msgstr "應用程式命令 ID snowflake。"

#: interactions.api.http.interaction.InteractionRequest.delete_application_command:5
#: of
msgid "Guild ID snowflake, if declared. Defaults to None (Global)."
msgstr "伺服器 ID snowflake，如有。預設為 None（全局）。"

#: interactions.api.http.interaction.InteractionRequest.edit_application_command_permissions:1
#: of
msgid "Edits permissions for an application command."
msgstr "編輯應用程式命令的權限。"

#: interactions.api.http.interaction.InteractionRequest.edit_application_command_permissions:4
#: of
msgid ""
"This requires authenticating with the Bearer token. Likewise, if this "
"function is used in a bot process with a bot token, this will fail."
msgstr "需要使用 Bearer token進行身份驗證。同樣，如果在帶有bot token的bot進程中使用此函數，則會失敗。"

#: interactions.api.http.interaction.InteractionRequest.edit_application_command_permissions:9
#: of
msgid "Application command ID snowflake"
msgstr "應用程式命令 ID snowflake"

#: interactions.api.http.interaction.InteractionRequest.edit_application_command_permissions:10
#: of
msgid "Permission data."
msgstr "權限數據。"

#: interactions.api.http.interaction.InteractionRequest.edit_application_command_permissions:11
#: of
msgid "Returns an updated Application Guild permission object."
msgstr "回傳更新的應用程式伺服器權限物品。"

#: interactions.api.http.interaction.InteractionRequest.get_application_command_permissions:1
#: of
msgid ""
"Gets, from the Discord API, permissions from a specific Guild application"
" command."
msgstr "從 Discord API 獲取特定伺服器應用程式命令的權限。"

#: interactions.api.http.interaction.InteractionRequest.get_application_command_permissions:5
#: of
msgid "Application Command ID snowflake"
msgstr "應用程式命令 ID snowflake"

#: interactions.api.http.interaction.InteractionRequest.get_application_command_permissions:6
#: of
msgid "a Guild Application Command permissions object"
msgstr "伺服器應用程式命令權限物品"

#: interactions.api.http.interaction.InteractionRequest.get_all_application_command_permissions:1
#: of
msgid ""
"Gets, from the Discord API, permissions from all Application commands at "
"that Guild."
msgstr "從 Discord API 獲取該伺服器所有應用程式命令的權限。"

#: interactions.api.http.interaction.InteractionRequest.get_all_application_command_permissions:5
#: of
msgid "An array of Guild Application Command permissions"
msgstr "伺服器應用程式命令權限數組"

#: interactions.api.http.interaction.InteractionRequest.create_interaction_response:1
#: of
msgid "Posts initial response to an interaction, but you need to add the token."
msgstr "對互動發出初始回應，但您需要添加token。"

#: interactions.api.http.interaction.InteractionRequest.create_interaction_response:3
#: of
msgid "Token."
msgstr "Token。"

#: interactions.api.http.interaction.InteractionRequest.create_interaction_response:5
#: interactions.api.http.user.UserRequest.modify_self:3 of
msgid "The data to send."
msgstr "要發送的數據。"

#: interactions.api.http.interaction.InteractionRequest.get_original_interaction_response:1
#: of
msgid "Gets an existing interaction message."
msgstr "獲取現有的互動訊息。"

#: interactions.api.http.interaction.InteractionRequest.get_original_interaction_response:3
#: of
msgid "token"
msgstr "token"

#: interactions.api.http.interaction.InteractionRequest.delete_interaction_response:5
#: interactions.api.http.interaction.InteractionRequest.edit_interaction_response:6
#: interactions.api.http.interaction.InteractionRequest.get_original_interaction_response:5
#: of
msgid ""
"Message ID snowflake. Defaults to `@original` which represents the "
"initial response msg."
msgstr "訊息 ID snowflake。預設為 `@original`，表示初始回應訊息。"

#: interactions.api.http.interaction.InteractionRequest.get_original_interaction_response:6
#: of
msgid "Message data."
msgstr "訊息數據。"

#: interactions.api.http.interaction.InteractionRequest.edit_interaction_response:1
#: of
msgid ""
"Edits an existing interaction message, but token needs to be manually "
"called."
msgstr "編輯現有的互動訊息，但需要手動調用token。"

#: interactions.api.http.interaction.InteractionRequest.edit_interaction_response:3
#: of
msgid "A dictionary containing the new response."
msgstr "包含新回應的字典。"

#: interactions.api.http.interaction.InteractionRequest._post_followup:5
#: interactions.api.http.interaction.InteractionRequest.delete_interaction_response:3
#: interactions.api.http.interaction.InteractionRequest.edit_interaction_response:4
#: of
msgid "the token of the interaction"
msgstr "互動的token"

#: interactions.api.http.interaction.InteractionRequest.edit_interaction_response:7
#: of
msgid "Updated message data."
msgstr "更新的訊息數據。"

#: interactions.api.http.interaction.InteractionRequest.delete_interaction_response:1
#: of
msgid "Deletes an existing interaction message."
msgstr "刪除現有的互動訊息。"

#: interactions.api.http.interaction.InteractionRequest._post_followup:1 of
msgid "Send a followup to an interaction."
msgstr "向互動發送後續訊息。"

#: interactions.api.http.interaction.InteractionRequest._post_followup:3 of
msgid "the payload to send"
msgstr "要發送的有效負載"

#: interactions.api.http.interaction.InteractionRequest._post_followup:4 of
msgid "the id of the application"
msgstr "應用程式的id"

#: interactions.api.http.member.MemberRequest.get_member:1 of
msgid "Uses the API to fetch a member from a guild."
msgstr "使用 API 從伺服器中獲取成員。"

#: interactions.api.http.member.MemberRequest.get_member:4
#: interactions.api.http.member.MemberRequest.modify_member:4 of
msgid "Member ID snowflake."
msgstr "成員 ID snowflake。"

#: interactions.api.http.member.MemberRequest.get_member:5 of
msgid "A member object, if any."
msgstr "成員物品，如有。"

#: interactions.api.http.member.MemberRequest.get_list_of_members:1 of
msgid "Lists the members of a guild."
msgstr "列出伺服器的成員。"

#: interactions.api.http.member.MemberRequest.get_list_of_members:4 of
msgid "How many members to get from the API. Max is 1000. Defaults to 1."
msgstr "從 API 獲取多少成員。最大值為 1000。預設為 1。"

#: interactions.api.http.member.MemberRequest.get_list_of_members:5 of
msgid "Get Member IDs after this snowflake. Defaults to None."
msgstr "在此 snowflake 之後獲取成員 ID。預設為 None。"

#: interactions.api.http.member.MemberRequest.get_list_of_members:6 of
msgid "An array of Member objects."
msgstr "成員物品的數組。"

#: interactions.api.http.member.MemberRequest.search_guild_members:1 of
msgid ""
"Search a guild for members whose username or nickname starts with "
"provided string."
msgstr "搜索伺服器，以找到其用戶名或暱稱開頭為提供的字符串的成員。"

#: interactions.api.http.member.MemberRequest.search_guild_members:4 of
msgid "The string to search for"
msgstr "要搜索的字符串"

#: interactions.api.http.member.MemberRequest.search_guild_members:5 of
msgid "The number of members to return. Defaults to 1."
msgstr "要回傳的成員數量。預設為 1。"

#: interactions.api.http.member.MemberRequest.add_member_role:1 of
msgid "Adds a role to a guild member."
msgstr "向伺服器成員添加身份組。"

#: interactions.api.http.member.MemberRequest.add_member_role:3
#: interactions.api.http.member.MemberRequest.remove_member_role:3 of
msgid "The ID of the guild"
msgstr "伺服器的 ID"

#: interactions.api.http.member.MemberRequest.add_member_role:4
#: interactions.api.http.member.MemberRequest.remove_member_role:4 of
msgid "The ID of the user"
msgstr "用戶的 ID"

#: interactions.api.http.member.MemberRequest.add_member_role:5
#: interactions.api.http.member.MemberRequest.remove_member_role:5 of
msgid "The ID of the role to add"
msgstr "要添加的身份組 ID"

#: interactions.api.http.member.MemberRequest.add_member_role:6
#: interactions.api.http.member.MemberRequest.modify_member:7
#: interactions.api.http.member.MemberRequest.remove_member_role:6 of
msgid "The reason for this action. Defaults to None."
msgstr "此操作的原因。預設為 None。"

#: interactions.api.http.member.MemberRequest.remove_member_role:1 of
msgid "Removes a role to a guild member."
msgstr "從伺服器成員中刪除身份組。"

#: interactions.api.http.member.MemberRequest.modify_member:1 of
msgid ""
"Edits a member. This can nick them, change their roles, mute/deafen (and "
"its contrary), and moving them across channels and/or disconnect them."
msgstr "編輯成員。這可以給他們取暱稱，更改他們的身份組，靜音/拒聽（和取消），將他們移動到不同的頻道和/或斷開他們的連接。"

#: interactions.api.http.member.MemberRequest.modify_member:6 of
msgid "Payload representing parameters (nick, roles, mute, deaf, channel_id)"
msgstr "表示參數（暱稱，身份組，靜音，拒聽，頻道 ID）的有效負載"

#: interactions.api.http.member.MemberRequest.modify_member:8 of
msgid "Modified member object."
msgstr "修改的成員物品。"

#: interactions.api.http.message.MessageRequest.send_message:1 of
msgid ""
"A higher level implementation of :meth:`create_message()` that handles "
"the payload dict internally. Does not integrate components into the "
"function, and is a port from v3.0.0"
msgstr ":meth:`create_message()` 的更高級別實現，它在內部處理有效負載字典。不將組件集成到函數中，並且是從 v3.0.0 移植的"

#: interactions.api.http.message.MessageRequest.create_message:1 of
msgid "Send a message to the specified channel."
msgstr "向指定的頻道發送訊息。"

#: interactions.api.http.message.MessageRequest.create_message:3 of
msgid "Dictionary contents of a message. (i.e. message payload)"
msgstr "訊息的字典內容。（即訊息有效負載）"

#: interactions.api.http.message.MessageRequest.create_message:4
#: interactions.api.http.message.MessageRequest.delete_message:3
#: interactions.api.http.message.MessageRequest.delete_messages:3
#: interactions.api.http.message.MessageRequest.edit_message:3
#: interactions.api.http.reaction.ReactionRequest.create_reaction:3
#: interactions.api.http.reaction.ReactionRequest.get_reactions_of_emoji:3
#: interactions.api.http.reaction.ReactionRequest.remove_all_reactions_of_emoji:3
#: interactions.api.http.reaction.ReactionRequest.remove_self_reaction:3 of
msgid "Channel snowflake ID."
msgstr "頻道 snowflake ID。"

#: interactions.api.http.message.MessageRequest.create_message:5
#: interactions.api.http.message.MessageRequest.edit_message:6 of
msgid "An optional list of files to send attached to the message."
msgstr "要發送的可選附加文件列表。"

#: interactions.api.http.message.MessageRequest.create_message of
msgid "return dict"
msgstr "回傳字典"

#: interactions.api.http.message.MessageRequest.create_message:6 of
msgid "Dictionary representing a message (?)"
msgstr "表示訊息的字典（？）"

#: interactions.api.http.message.MessageRequest.get_message:1 of
msgid "Get a specific message in the channel."
msgstr "獲取頻道中的特定訊息。"

#: interactions.api.http.message.MessageRequest.get_message:3 of
msgid "the channel this message belongs to"
msgstr "此訊息所屬的頻道"

#: interactions.api.http.message.MessageRequest.get_message:4 of
msgid "the id of the message"
msgstr "訊息的 id"

#: interactions.api.http.message.MessageRequest.get_message:5 of
msgid "message if it exists."
msgstr "如果存在，則為訊息。"

#: interactions.api.http.message.MessageRequest.delete_message:1 of
msgid "Deletes a message from a specified channel."
msgstr "從指定的頻道中刪除訊息。"

#: interactions.api.http.message.MessageRequest.delete_message:4
#: interactions.api.http.message.MessageRequest.edit_message:4
#: interactions.api.http.reaction.ReactionRequest.create_reaction:4
#: interactions.api.http.reaction.ReactionRequest.get_reactions_of_emoji:4
#: interactions.api.http.reaction.ReactionRequest.remove_all_reactions_of_emoji:4
#: interactions.api.http.reaction.ReactionRequest.remove_self_reaction:4 of
msgid "Message snowflake ID."
msgstr "訊息 snowflake ID。"

#: interactions.api.http.message.MessageRequest.delete_message:5
#: interactions.api.http.message.MessageRequest.delete_messages:5 of
msgid "Optional reason to show up in the audit log. Defaults to `None`."
msgstr "顯示在審核日誌中的可選原因。預設為 `None`。"

#: interactions.api.http.message.MessageRequest.delete_messages:1 of
msgid "Deletes messages from a specified channel."
msgstr "從指定的頻道中刪除訊息。"

#: interactions.api.http.message.MessageRequest.delete_messages:4 of
msgid "An array of message snowflake IDs."
msgstr "訊息 snowflake ID 的數組。"

#: interactions.api.http.message.MessageRequest.edit_message:1 of
msgid "Edits a message that already exists."
msgstr "編輯已存在的訊息。"

#: interactions.api.http.message.MessageRequest.edit_message:5 of
msgid "Any new data that needs to be changed."
msgstr "需要更改的任何新數據。"

#: interactions.api.http.message.MessageRequest.edit_message:8 of
msgid "A message object with edited attributes."
msgstr "具有編輯屬性的訊息物品。"

#: interactions.api.http.message.MessageRequest.pin_message:1 of
msgid "Pin a message to a channel."
msgstr "將訊息釘選到頻道。"

#: interactions.api.http.message.MessageRequest.pin_message:4
#: interactions.api.http.message.MessageRequest.unpin_message:4
#: interactions.api.http.webhook.WebhookRequest.delete_webhook_message:5
#: interactions.api.http.webhook.WebhookRequest.edit_webhook_message:5 of
msgid "Message ID snowflake."
msgstr "訊息 ID snowflake。"

#: interactions.api.http.message.MessageRequest.unpin_message:1 of
msgid "Unpin a message to a channel."
msgstr "取消釘選頻道中的訊息。"

#: interactions.api.http.message.MessageRequest.publish_message:1 of
msgid ""
"Publishes (API calls it crossposts) a message in a News channel to any "
"that is followed by."
msgstr "在新聞頻道中發布（API將其稱為crossposts）任何已關注的訊息。"

#: interactions.api.http.message.MessageRequest.publish_message:3 of
msgid "Channel the message is in"
msgstr "訊息所在的頻道"

#: interactions.api.http.message.MessageRequest.publish_message:4 of
msgid "The id of the message to publish"
msgstr "要發布的訊息的 id"

#: interactions.api.http.message.MessageRequest.publish_message:5 of
msgid "message object"
msgstr "訊息物品"

#: interactions.api.http.reaction.ReactionRequest.create_reaction:1 of
msgid "Create a reaction for a message."
msgstr "為訊息創建反應。"

#: interactions.api.http.reaction.ReactionRequest.create_reaction:5 of
msgid "The emoji to use (format: `name:id`)"
msgstr "要使用的表情符號（格式：`name:id`）"

#: interactions.api.http.reaction.ReactionRequest.remove_self_reaction:1 of
msgid "Remove bot user's reaction from a message."
msgstr "從訊息中刪除機器人用戶的反應。"

#: interactions.api.http.reaction.ReactionRequest.remove_all_reactions_of_emoji:5
#: interactions.api.http.reaction.ReactionRequest.remove_self_reaction:5 of
msgid "The emoji to remove (format: `name:id`)"
msgstr "要刪除的表情符號（格式：`name:id`）"

#: interactions.api.http.reaction.ReactionRequest.remove_user_reaction:1 of
msgid "Remove user's reaction from a message."
msgstr "從訊息中刪除用戶的反應。"

#: interactions.api.http.reaction.ReactionRequest.remove_user_reaction:3 of
msgid "The channel this is taking place in"
msgstr "進行操作的頻道"

#: interactions.api.http.reaction.ReactionRequest.remove_user_reaction:4 of
msgid "The message to remove the reaction on."
msgstr "要刪除反應的訊息。"

#: interactions.api.http.reaction.ReactionRequest.remove_user_reaction:5 of
msgid "The emoji to remove. (format: `name:id`)"
msgstr "要刪除的表情符號。 （格式：`name:id`）"

#: interactions.api.http.reaction.ReactionRequest.remove_user_reaction:6 of
msgid "The user to remove reaction of."
msgstr "要刪除反應的用戶。"

#: interactions.api.http.reaction.ReactionRequest.remove_all_reactions:1 of
msgid "Remove all reactions from a message."
msgstr "從訊息中刪除所有反應。"

#: interactions.api.http.reaction.ReactionRequest.remove_all_reactions:3 of
msgid "The channel this is taking place in."
msgstr "進行操作的頻道。"

#: interactions.api.http.reaction.ReactionRequest.remove_all_reactions:4 of
msgid "The message to clear reactions from."
msgstr "要清除反應的訊息。"

#: interactions.api.http.reaction.ReactionRequest.remove_all_reactions_of_emoji:1
#: of
msgid "Remove all reactions of a certain emoji from a message."
msgstr "從訊息中刪除某個表情符號的所有反應。"

#: interactions.api.http.reaction.ReactionRequest.get_reactions_of_emoji:1 of
msgid "Gets the users who reacted to the emoji."
msgstr "獲取對表情符號作出反應的用戶。"

#: interactions.api.http.reaction.ReactionRequest.get_reactions_of_emoji:5 of
msgid "The emoji to get (format: `name:id`)"
msgstr "要獲取的表情符號（格式：`name:id`）"

#: interactions.api.http.reaction.ReactionRequest.get_reactions_of_emoji:6 of
msgid "Max number of users to return (1-100)"
msgstr "要返回的最大用戶數（1-100）"

#: interactions.api.http.reaction.ReactionRequest.get_reactions_of_emoji:7 of
msgid "Get users after this user ID"
msgstr "在此用戶 ID 之後獲取用戶"

#: interactions.api.http.reaction.ReactionRequest.get_reactions_of_emoji:8 of
msgid "A list of users who sent that emoji."
msgstr "發送該表情符號的用戶列表。"

#: interactions.api.http.scheduledEvent.ScheduledEventRequest.create_scheduled_event:1
#: of
msgid "Creates a scheduled event."
msgstr "創建排定事件。"

#: interactions.api.http.scheduledEvent.ScheduledEventRequest.create_scheduled_event:4
#: interactions.api.http.scheduledEvent.ScheduledEventRequest.modify_scheduled_event:5
#: of
msgid ""
"The dictionary containing the parameters and values to edit the "
"associated event."
msgstr "包含要編輯關聯事件的參數和值的字典。"

#: interactions.api.http.scheduledEvent.ScheduledEventRequest.create_scheduled_event:5
#: of
msgid "A dictionary containing the new guild scheduled event object on success."
msgstr "包含新的伺服器排定事件物品的字典。"

#: interactions.api.http.scheduledEvent.ScheduledEventRequest.get_scheduled_event:1
#: of
msgid "Gets a guild scheduled event."
msgstr "獲取伺服器排定事件。"

#: interactions.api.http.scheduledEvent.ScheduledEventRequest.delete_scheduled_event:4
#: interactions.api.http.scheduledEvent.ScheduledEventRequest.get_scheduled_event:4
#: interactions.api.http.scheduledEvent.ScheduledEventRequest.modify_scheduled_event:4
#: of
msgid "Guild Scheduled Event ID snowflake."
msgstr "伺服器排定事件 ID snowflake。"

#: interactions.api.http.scheduledEvent.ScheduledEventRequest.get_scheduled_event:5
#: interactions.api.http.scheduledEvent.ScheduledEventRequest.get_scheduled_events:4
#: of
msgid ""
"A boolean to include number of users subscribed to the associated event, "
"if given."
msgstr "如果提供，則包含訂閱了關聯事件的用戶數。"

#: interactions.api.http.scheduledEvent.ScheduledEventRequest.get_scheduled_event:6
#: of
msgid "A dictionary containing the guild scheduled event object on success."
msgstr "包含伺服器排定事件物品的字典。"

#: interactions.api.http.scheduledEvent.ScheduledEventRequest.get_scheduled_events:1
#: of
msgid "Gets all guild scheduled events in a guild."
msgstr "獲取伺服器中的所有伺服器排定事件。"

#: interactions.api.http.scheduledEvent.ScheduledEventRequest.get_scheduled_events:5
#: of
msgid ""
"A List of a dictionary containing the guild scheduled event objects on "
"success."
msgstr "包含伺服器排定事件物品的字典列表。"

#: interactions.api.http.scheduledEvent.ScheduledEventRequest.modify_scheduled_event:1
#: of
msgid "Modifies a scheduled event."
msgstr "修改排定事件。"

#: interactions.api.http.scheduledEvent.ScheduledEventRequest.modify_scheduled_event:6
#: of
msgid ""
"A dictionary containing the updated guild scheduled event object on "
"success."
msgstr "包含更新的伺服器排定事件物品的字典。"

#: interactions.api.http.scheduledEvent.ScheduledEventRequest.delete_scheduled_event:1
#: of
msgid "Deletes a guild scheduled event."
msgstr "刪除伺服器排定事件。"

#: interactions.api.http.scheduledEvent.ScheduledEventRequest.delete_scheduled_event:5
#: of
msgid "Nothing on success."
msgstr "成功時沒有任何東西。"

#: interactions.api.http.scheduledEvent.ScheduledEventRequest.get_scheduled_event_users:1
#: of
msgid "Get the registered users of a scheduled event."
msgstr "獲取排定事件的註冊用戶。"

#: interactions.api.http.scheduledEvent.ScheduledEventRequest.get_scheduled_event_users:4
#: of
msgid "Guild Scheduled Event snowflake."
msgstr "伺服器排定事件 snowflake。"

#: interactions.api.http.scheduledEvent.ScheduledEventRequest.get_scheduled_event_users:5
#: of
msgid "Limit of how many users to pull from the event. Defaults to 100."
msgstr "從事件中拉取的用戶數量的限制。預設為 100。"

#: interactions.api.http.scheduledEvent.ScheduledEventRequest.get_scheduled_event_users:6
#: of
msgid "Include guild member data if it exists. Defaults to False."
msgstr "如果存在，則包含伺服器成員數據。預設為 False。"

#: interactions.api.http.scheduledEvent.ScheduledEventRequest.get_scheduled_event_users:7
#: of
msgid "Considers only users before given user ID snowflake. Defaults to None."
msgstr "僅考慮給定用戶 ID snowflake 之前的用戶。預設為 None。"

#: interactions.api.http.scheduledEvent.ScheduledEventRequest.get_scheduled_event_users:8
#: of
msgid "Considers only users after given user ID snowflake. Defaults to None."
msgstr "僅考慮給定用戶 ID snowflake 之後的用戶。預設為 None。"

#: interactions.api.http.scheduledEvent.ScheduledEventRequest.get_scheduled_event_users:9
#: of
msgid "Returns a list of guild scheduled event user objects on success."
msgstr "返回一個伺服器排定事件用戶物品列表。"

#: interactions.api.http.sticker.StickerRequest.get_sticker:1 of
msgid "Get a specific sticker."
msgstr "獲取特定貼圖。"

#: interactions.api.http.sticker.StickerRequest.get_sticker:3 of
msgid "The id of the sticker"
msgstr "貼圖的 id"

#: interactions.api.http.sticker.StickerRequest.get_guild_sticker:5
#: interactions.api.http.sticker.StickerRequest.get_sticker:4 of
msgid "Sticker or None"
msgstr "貼圖或None"

#: interactions.api.http.sticker.StickerRequest.list_nitro_sticker_packs:1 of
msgid "Gets the list of sticker packs available to Nitro subscribers."
msgstr "獲取可供 Nitro 訂閱者使用的貼圖包列表。"

#: interactions.api.http.sticker.StickerRequest.list_nitro_sticker_packs:3 of
msgid "List of sticker packs"
msgstr "貼圖包列表"

#: interactions.api.http.sticker.StickerRequest.list_guild_stickers:1 of
msgid "Get the stickers for a guild."
msgstr "獲取伺服器的貼圖。"

#: interactions.api.http.sticker.StickerRequest.get_guild_sticker:3
#: interactions.api.http.sticker.StickerRequest.list_guild_stickers:3 of
msgid "The guild to get stickers from"
msgstr "要從中獲取貼圖的伺服器"

#: interactions.api.http.sticker.StickerRequest.list_guild_stickers:4 of
msgid "List of Stickers or None"
msgstr "貼圖列表或None"

#: interactions.api.http.sticker.StickerRequest.get_guild_sticker:1 of
msgid "Get a sticker from a guild."
msgstr "從伺服器獲取貼圖。"

#: interactions.api.http.sticker.StickerRequest.get_guild_sticker:4 of
msgid "The sticker to get from the guild"
msgstr "要從伺服器獲取的貼圖"

#: interactions.api.http.sticker.StickerRequest.create_guild_sticker:1 of
msgid ""
"Create a new sticker for the guild. Requires the "
"MANAGE_EMOJIS_AND_STICKERS permission."
msgstr "為伺服器創建新貼圖。需要 MANAGE_EMOJIS_AND_STICKERS 權限。"

#: interactions.api.http.sticker.StickerRequest.create_guild_sticker:3
#: interactions.api.http.sticker.StickerRequest.modify_guild_sticker:3 of
msgid "the payload to send."
msgstr "要發送的有效負載。"

#: interactions.api.http.sticker.StickerRequest.create_guild_sticker:4 of
msgid "The guild to create sticker at."
msgstr "要在其中創建貼圖的伺服器。"

#: interactions.api.http.sticker.StickerRequest.create_guild_sticker:5
#: interactions.api.http.sticker.StickerRequest.delete_guild_sticker:5
#: interactions.api.http.sticker.StickerRequest.modify_guild_sticker:6 of
msgid "The reason for this action."
msgstr "此操作的原因。"

#: interactions.api.http.sticker.StickerRequest.create_guild_sticker:6 of
msgid "The new sticker data on success."
msgstr "成功時的新貼圖數據。"

#: interactions.api.http.sticker.StickerRequest.modify_guild_sticker:1 of
msgid ""
"Modify the given sticker. Requires the MANAGE_EMOJIS_AND_STICKERS "
"permission."
msgstr "修改給定的貼圖。需要 MANAGE_EMOJIS_AND_STICKERS 權限。"

#: interactions.api.http.sticker.StickerRequest.delete_guild_sticker:3
#: interactions.api.http.sticker.StickerRequest.modify_guild_sticker:4 of
msgid "The guild of the target sticker."
msgstr "目標貼圖的伺服器。"

#: interactions.api.http.sticker.StickerRequest.modify_guild_sticker:5 of
msgid "The sticker to modify."
msgstr "要修改的貼圖。"

#: interactions.api.http.sticker.StickerRequest.modify_guild_sticker:7 of
msgid "The updated sticker data on success."
msgstr "成功時的更新貼圖數據。"

#: interactions.api.http.sticker.StickerRequest.delete_guild_sticker:1 of
msgid ""
"Delete the given sticker. Requires the MANAGE_EMOJIS_AND_STICKERS "
"permission."
msgstr "刪除給定的貼圖。需要 MANAGE_EMOJIS_AND_STICKERS 權限。"

#: interactions.api.http.sticker.StickerRequest.delete_guild_sticker:4 of
msgid "The sticker to delete."
msgstr "要刪除的貼圖。"

#: interactions.api.http.sticker.StickerRequest.delete_guild_sticker:6 of
msgid "Returns 204 No Content on success."
msgstr "成功時返回 204 No Content。"

#: interactions.api.http.thread.ThreadRequest.join_thread:1 of
msgid "Have the bot user join a thread."
msgstr "讓機器人用戶加入一個討論串。"

#: interactions.api.http.thread.ThreadRequest.join_thread:3 of
msgid "The thread to join."
msgstr "要加入的討論串。"

#: interactions.api.http.thread.ThreadRequest.leave_thread:1 of
msgid "Have the bot user leave a thread."
msgstr "讓機器人用戶離開一個討論串。"

#: interactions.api.http.thread.ThreadRequest.leave_thread:3 of
msgid "The thread to leave."
msgstr "要離開的討論串。"

#: interactions.api.http.thread.ThreadRequest.add_member_to_thread:1 of
msgid "Add another user to a thread."
msgstr "將另一個用戶添加到討論串。"

#: interactions.api.http.thread.ThreadRequest.add_member_to_thread:3
#: interactions.api.http.thread.ThreadRequest.get_member_from_thread:3
#: interactions.api.http.thread.ThreadRequest.remove_member_from_thread:3 of
msgid "The ID of the thread"
msgstr "討論串的ID"

#: interactions.api.http.thread.ThreadRequest.add_member_to_thread:4 of
msgid "The ID of the user to add"
msgstr "要添加的用戶的ID"

#: interactions.api.http.thread.ThreadRequest.remove_member_from_thread:1 of
msgid "Remove another user from a thread."
msgstr "從討論串中刪除另一個用戶。"

#: interactions.api.http.thread.ThreadRequest.remove_member_from_thread:4 of
msgid "The ID of the user to remove"
msgstr "要移除的用戶的ID"

#: interactions.api.http.thread.ThreadRequest.get_member_from_thread:1 of
msgid "Get a member from a thread."
msgstr "從討論串中獲取成員。"

#: interactions.api.http.thread.ThreadRequest.get_member_from_thread:4 of
msgid "The ID of the user to find"
msgstr "要查找的用戶的ID"

#: interactions.api.http.thread.ThreadRequest.get_member_from_thread:5 of
msgid "A thread member object, if they're in the thread."
msgstr "如果他們在討論串中，則為討論串成員物品。"

#: interactions.api.http.thread.ThreadRequest.list_thread_members:1 of
msgid "Get a list of members in the thread."
msgstr "獲取討論串中的成員列表。"

#: interactions.api.http.thread.ThreadRequest.list_thread_members:3 of
msgid "the id of the thread"
msgstr "討論串的ID"

#: interactions.api.http.thread.ThreadRequest.list_thread_members:4 of
msgid "a list of thread member objects"
msgstr "討論串成員物品列表"

#: interactions.api.http.thread.ThreadRequest.list_public_archived_threads:1 of
msgid "Get a list of archived public threads in a given channel."
msgstr "獲取給定頻道中的已存檔的公共討論串列表。"

#: interactions.api.http.thread.ThreadRequest.list_joined_private_archived_threads:3
#: interactions.api.http.thread.ThreadRequest.list_private_archived_threads:3
#: interactions.api.http.thread.ThreadRequest.list_public_archived_threads:3 of
msgid "The channel to get threads from"
msgstr "要從中獲取討論串的頻道"

#: interactions.api.http.thread.ThreadRequest.list_joined_private_archived_threads:4
#: interactions.api.http.thread.ThreadRequest.list_private_archived_threads:4
#: interactions.api.http.thread.ThreadRequest.list_public_archived_threads:4 of
msgid "Optional limit of threads to"
msgstr "可選的討論串限制"

#: interactions.api.http.thread.ThreadRequest.list_private_archived_threads:5
#: interactions.api.http.thread.ThreadRequest.list_public_archived_threads:5 of
msgid "Get threads before this Thread snowflake ID"
msgstr "在此討論串snowflake ID之前獲取討論串"

#: interactions.api.http.thread.ThreadRequest.list_joined_private_archived_threads:6
#: interactions.api.http.thread.ThreadRequest.list_private_archived_threads:6
#: interactions.api.http.thread.ThreadRequest.list_public_archived_threads:6 of
msgid "a list of threads"
msgstr "討論串列表"

#: interactions.api.http.thread.ThreadRequest.list_private_archived_threads:1
#: of
msgid "Get a list of archived private threads in a channel."
msgstr "獲取頻道中的已存檔的私有討論串列表。"

#: interactions.api.http.thread.ThreadRequest.list_joined_private_archived_threads:1
#: of
msgid ""
"Get a list of archived private threads in a channel that the bot has "
"joined."
msgstr "獲取機器人已加入的頻道中的已存檔的私有討論串列表。"

#: interactions.api.http.thread.ThreadRequest.list_joined_private_archived_threads:5
#: of
msgid "Get threads before this snowflake ID"
msgstr "在此snowflake ID之前獲取討論串"

#: interactions.api.http.thread.ThreadRequest.list_active_threads:1 of
msgid "List active threads within a guild."
msgstr "列出伺服器中的活動討論串。"

#: interactions.api.http.thread.ThreadRequest.list_active_threads:3 of
msgid "the guild id to get threads from"
msgstr "要從中獲取討論串的伺服器ID"

#: interactions.api.http.thread.ThreadRequest.list_active_threads:4 of
msgid "A list of active threads"
msgstr "活動討論串列表"

#: interactions.api.http.thread.ThreadRequest.create_thread:1 of
msgid ""
"From a given channel, create a Thread with an optional message to start "
"with.."
msgstr "從給定的頻道中，創建一個討論串，並可選擇一條訊息開始。"

#: interactions.api.http.thread.ThreadRequest.create_thread:3 of
msgid "The ID of the channel to create this thread in"
msgstr "要在其中創建此討論串的頻道的ID"

#: interactions.api.http.thread.ThreadRequest.create_thread:4 of
msgid "The name of the thread"
msgstr "討論串的名稱"

#: interactions.api.http.thread.ThreadRequest.create_thread:5 of
msgid ""
"duration in minutes to automatically archive the thread after recent "
"activity, can be set to: 60, 1440, 4320, 10080"
msgstr "在最近的活動後自動存檔討論串的持續時間（以分鐘為單位），可以設置為：60，1440，4320，10080"

#: interactions.api.http.thread.ThreadRequest.create_thread:7 of
msgid ""
"The type of thread, defaults to public. ignored if creating thread from a"
" message"
msgstr "討論串的類型，默認為公共。如果從訊息創建討論串，則忽略"

#: interactions.api.http.thread.ThreadRequest.create_thread:8 of
msgid "Boolean to display if the Thread is open to join or private."
msgstr "Boolean，用於顯示討論串是否開放加入或私有。"

#: interactions.api.http.thread.ThreadRequest.create_thread:9 of
msgid "An optional message to create a thread from."
msgstr "可選的訊息，用於從中創建討論串。"

#: interactions.api.http.thread.ThreadRequest.create_thread:10 of
msgid "An optional reason for the audit log"
msgstr "可選的審核日誌原因"

#: interactions.api.http.thread.ThreadRequest.create_thread:11 of
msgid "The created thread"
msgstr "已創建的討論串"

#: interactions.api.http.user.UserRequest.get_self:1 of
msgid "An alias to `get_user`, but only gets the current bot user."
msgstr "一個`get_user`的別名，但只獲取當前機器人用戶。"

#: interactions.api.http.user.UserRequest.get_self:3 of
msgid "A partial User object of the current bot user in the form of a dictionary."
msgstr "當前機器人用戶的部分用戶物品，以字典形式表示。"

#: interactions.api.http.user.UserRequest.get_user:1 of
msgid "Gets a user object for a given user ID."
msgstr "為給定的用戶ID獲取用戶物品。"

#: interactions.api.http.user.UserRequest.get_user:3 of
msgid "A user snowflake ID. If omitted, this defaults to the current bot user."
msgstr "用戶snowflake ID。如果省略，則默認為當前機器人用戶。"

#: interactions.api.http.user.UserRequest.get_user:4 of
msgid "A partial User object in the form of a dictionary."
msgstr "部分用戶物品，以字典形式表示。"

#: interactions.api.http.user.UserRequest.modify_self:1 of
msgid "Modify the bot user account settings."
msgstr "修改機器人用戶帳戶設置。"

#: interactions.api.http.user.UserRequest.modify_self_nick_in_guild:1 of
msgid "Changes a nickname of the current bot user in a guild."
msgstr "更改伺服器中當前機器人用戶的暱稱。"

#: interactions.api.http.user.UserRequest.modify_self_nick_in_guild:3 of
msgid "Guild snowflake ID."
msgstr "伺服器snowflake ID。"

#: interactions.api.http.user.UserRequest.modify_self_nick_in_guild:4 of
msgid "The new nickname, if any."
msgstr "新的暱稱，如果有的話。"

#: interactions.api.http.user.UserRequest.modify_self_nick_in_guild:5 of
msgid "Nothing needed to be yielded."
msgstr "不需要產生任何東西。"

#: interactions.api.http.user.UserRequest.create_dm:1 of
msgid "Creates a new DM channel with a user."
msgstr "與用戶創建新的DM頻道。"

#: interactions.api.http.user.UserRequest.create_dm:3 of
msgid "User snowflake ID."
msgstr "用戶snowflake ID。"

#: interactions.api.http.user.UserRequest.create_dm:4 of
msgid "Returns a dictionary representing a DM Channel object."
msgstr "返回一個字典，表示DM頻道物品。"

#: interactions.api.http.webhook.WebhookRequest.create_webhook:1 of
msgid "Create a new webhook."
msgstr "創建新的webhook。"

#: interactions.api.http.webhook.WebhookRequest.create_webhook:4 of
msgid "Name of the webhook (1-80 characters)"
msgstr "webhook的名稱（1-80個字符）"

#: interactions.api.http.webhook.WebhookRequest.create_webhook:5 of
msgid "The image for the default webhook avatar, if given."
msgstr "如果提供，則為默認webhook頭像的圖像。"

#: interactions.api.http.webhook.WebhookRequest.create_webhook:7 of
msgid "Webhook object"
msgstr "Webhook物品"

#: interactions.api.http.webhook.WebhookRequest.get_channel_webhooks:1 of
msgid "Return a list of channel webhook objects."
msgstr "返回頻道webhook物品的列表。"

#: interactions.api.http.webhook.WebhookRequest.get_channel_webhooks:4
#: interactions.api.http.webhook.WebhookRequest.get_guild_webhooks:4 of
msgid "List of webhook objects"
msgstr "webhook物品列表"

#: interactions.api.http.webhook.WebhookRequest.get_guild_webhooks:1 of
msgid "Return a list of guild webhook objects."
msgstr "返回伺服器webhook物品的列表。"

#: interactions.api.http.webhook.WebhookRequest.get_webhook:1 of
msgid "Return the new webhook object for the given id."
msgstr "為給定的ID返回新的webhook物品。"

#: interactions.api.http.webhook.WebhookRequest.delete_original_webhook_message:3
#: interactions.api.http.webhook.WebhookRequest.delete_webhook:3
#: interactions.api.http.webhook.WebhookRequest.delete_webhook_message:3
#: interactions.api.http.webhook.WebhookRequest.edit_webhook_message:3
#: interactions.api.http.webhook.WebhookRequest.execute_github_webhook:3
#: interactions.api.http.webhook.WebhookRequest.execute_slack_webhook:3
#: interactions.api.http.webhook.WebhookRequest.execute_webhook:3
#: interactions.api.http.webhook.WebhookRequest.get_webhook:3
#: interactions.api.http.webhook.WebhookRequest.get_webhook_message:3 of
msgid "Webhook ID snowflake."
msgstr "Webhook ID snowflake。"

#: interactions.api.http.webhook.WebhookRequest.get_webhook:4 of
msgid "Webhook Token, if given."
msgstr "如果提供，則為Webhook Token。"

#: interactions.api.http.webhook.WebhookRequest.get_webhook:6 of
msgid ":return:Webhook object"
msgstr ":return:Webhook物品"

#: interactions.api.http.webhook.WebhookRequest.modify_webhook:1 of
msgid "Modify a webhook."
msgstr "修改webhook。"

#: interactions.api.http.webhook.WebhookRequest.modify_webhook:3 of
msgid "Webhook ID snowflake"
msgstr "Webhook ID snowflake"

#: interactions.api.http.webhook.WebhookRequest.modify_webhook:4 of
msgid "The payload for the webhook"
msgstr "webhook的有效負載"

#: interactions.api.http.webhook.WebhookRequest.delete_webhook:4
#: interactions.api.http.webhook.WebhookRequest.modify_webhook:5 of
msgid "The token for the webhook, if given."
msgstr "如果提供，則為webhook的token。"

#: interactions.api.http.webhook.WebhookRequest.modify_webhook:7 of
msgid "Modified webhook object."
msgstr "修改的webhook物品。"

#: interactions.api.http.webhook.WebhookRequest.delete_webhook:1 of
msgid "Delete a webhook."
msgstr "刪除webhook。"

#: interactions.api.http.webhook.WebhookRequest.execute_webhook:1 of
msgid "Sends a message as a webhook."
msgstr "作為webhook發送訊息。"

#: interactions.api.http.webhook.WebhookRequest.execute_github_webhook:4
#: interactions.api.http.webhook.WebhookRequest.execute_slack_webhook:4
#: interactions.api.http.webhook.WebhookRequest.execute_webhook:4 of
msgid "The token for the webhook."
msgstr "webhook的token。"

#: interactions.api.http.webhook.WebhookRequest.execute_github_webhook:5
#: interactions.api.http.webhook.WebhookRequest.execute_slack_webhook:5
#: interactions.api.http.webhook.WebhookRequest.execute_webhook:5 of
msgid "Payload consisting of the message."
msgstr "由訊息組成的有效負載。"

#: interactions.api.http.webhook.WebhookRequest.execute_webhook:6 of
msgid "The files to upload to the message."
msgstr "上傳到訊息的文件。"

#: interactions.api.http.webhook.WebhookRequest.execute_webhook:7 of
msgid ""
"A bool that signifies waiting for server confirmation of a send before "
"responding."
msgstr "Boolean，表示是否在回應之前等待伺服器確認發送。"

#: interactions.api.http.webhook.WebhookRequest.execute_webhook:8 of
msgid "Optional, sends a message to the specified thread."
msgstr "可選，將訊息發送到指定的討論串。"

#: interactions.api.http.webhook.WebhookRequest.execute_webhook:9 of
msgid "The message sent, if wait=True, else None."
msgstr "如果wait=True，則為發送的訊息，否則為None。"

#: interactions.api.http.webhook.WebhookRequest.execute_slack_webhook:1 of
msgid "Sends a message to a Slack-compatible webhook."
msgstr "發送訊息到Slack相容的webhook。"

#: interactions.api.http.webhook.WebhookRequest.execute_slack_webhook:10 of
msgid ""
"Payload structure is different than Discord's. See `here "
"<https://api.slack.com/messaging/webhooks>_` for more details."
msgstr "負載結構與Discord的不同。有關更多詳細信息，請參見`這裡 <https://api.slack.com/messaging/webhooks>_`。"

#: interactions.api.http.webhook.WebhookRequest.execute_github_webhook:1 of
msgid "Sends a message to a Github-compatible webhook."
msgstr "發送訊息到Github相容的webhook。"

#: interactions.api.http.webhook.WebhookRequest.execute_github_webhook:10 of
msgid ""
"Payload structure is different than Discord's. See `here "
"<https://discord.com/developers/docs/resources/webhook#execute-"
"githubcompatible-webhook>_` for more details."
msgstr "負載結構與Discord的不同。有關更多詳細信息，請參見`這裡 <https://discord.com/developers/docs/resources/webhook#execute-githubcompatible-webhook>_`。"

#: interactions.api.http.webhook.WebhookRequest.get_webhook_message:1 of
msgid "Retrieves a message sent from a Webhook."
msgstr "擷取從Webhook發送的訊息。"

#: interactions.api.http.webhook.WebhookRequest.delete_original_webhook_message:4
#: interactions.api.http.webhook.WebhookRequest.delete_webhook_message:4
#: interactions.api.http.webhook.WebhookRequest.edit_webhook_message:4
#: interactions.api.http.webhook.WebhookRequest.get_webhook_message:4 of
msgid "Webhook token."
msgstr "Webhook token。"

#: interactions.api.http.webhook.WebhookRequest.get_webhook_message:5 of
msgid "Message ID snowflake,"
msgstr "訊息ID snowflake，"

#: interactions.api.http.webhook.WebhookRequest.get_webhook_message:6 of
msgid "A Message object."
msgstr "一個Message物件。"

#: interactions.api.http.webhook.WebhookRequest.edit_webhook_message:1 of
msgid "Edits a message sent from a Webhook."
msgstr "編輯從Webhook發送的訊息。"

#: interactions.api.http.webhook.WebhookRequest.edit_webhook_message:6 of
msgid "A payload consisting of new message attributes."
msgstr "由新訊息屬性組成的有效負載。"

#: interactions.api.http.webhook.WebhookRequest.edit_webhook_message:7 of
msgid "An updated message object."
msgstr "更新的訊息物件。"

#: interactions.api.http.webhook.WebhookRequest.delete_webhook_message:1 of
msgid "Deletes a message object."
msgstr "刪除訊息物件。"

#: interactions.api.http.webhook.WebhookRequest.delete_original_webhook_message:1
#: of
msgid "Deletes the original message object sent."
msgstr "刪除發送的原始訊息物件。"
